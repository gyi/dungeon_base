// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgCode.proto

package com.base.pb;

public final class MsgCode {
  private MsgCode() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ProtoNetWorkMessage.GameCode}
   *
   * <pre>
   *c/s通讯消息号定义
   * </pre>
   */
  public enum GameCode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>RES_ALERT = 9000;</code>
     *
     * <pre>
     **-------------	共用消息号[9000 - 9999]		-------------
     * </pre>
     */
    RES_ALERT(0, 9000),
    /**
     * <code>REQ_HEARTBEAT = 9001;</code>
     *
     * <pre>
     *心跳包（客户端上传本地时间）
     * </pre>
     */
    REQ_HEARTBEAT(1, 9001),
    /**
     * <code>RES_HEARTBEAT = 9002;</code>
     *
     * <pre>
     *服务器返回系统时间
     * </pre>
     */
    RES_HEARTBEAT(2, 9002),
    /**
     * <code>REQ_LOGIN_GLOBAL = 10000;</code>
     *
     * <pre>
     **-------------	登陆[10000 - 10099]	-------------
     * </pre>
     */
    REQ_LOGIN_GLOBAL(3, 10000),
    /**
     * <code>RES_LOGIN_GLOBAL = 10001;</code>
     *
     * <pre>
     *登陆结果
     * </pre>
     */
    RES_LOGIN_GLOBAL(4, 10001),
    /**
     * <code>REQ_ROLE_LIST = 10002;</code>
     *
     * <pre>
     *请求角色列表
     * </pre>
     */
    REQ_ROLE_LIST(5, 10002),
    /**
     * <code>RES_ROLE_LIST = 10003;</code>
     *
     * <pre>
     *返回角色列表
     * </pre>
     */
    RES_ROLE_LIST(6, 10003),
    /**
     * <code>REQ_ROLE_CREATE = 10004;</code>
     *
     * <pre>
     *创建角色
     * </pre>
     */
    REQ_ROLE_CREATE(7, 10004),
    /**
     * <code>RES_ROLE_CREATE = 10005;</code>
     *
     * <pre>
     *创建角色返回
     * </pre>
     */
    RES_ROLE_CREATE(8, 10005),
    /**
     * <code>REQ_ROLE_DELETE = 10006;</code>
     *
     * <pre>
     *删除角色
     * </pre>
     */
    REQ_ROLE_DELETE(9, 10006),
    /**
     * <code>RES_ROLE_DELETE = 10007;</code>
     *
     * <pre>
     *删除角色确认
     * </pre>
     */
    RES_ROLE_DELETE(10, 10007),
    /**
     * <code>REQ_ROLE_ENTER_GAME = 10008;</code>
     *
     * <pre>
     *选择角色进入游戏
     * </pre>
     */
    REQ_ROLE_ENTER_GAME(11, 10008),
    /**
     * <code>RES_ROLE_ENTER_GAME = 10009;</code>
     *
     * <pre>
     *进入游戏返回
     * </pre>
     */
    RES_ROLE_ENTER_GAME(12, 10009),
    /**
     * <code>RES_ROLE_BASE_INFO = 10010;</code>
     *
     * <pre>
     *角色基础信息
     * </pre>
     */
    RES_ROLE_BASE_INFO(13, 10010),
    /**
     * <code>RES_ROLE_MAP_INFO = 10011;</code>
     *
     * <pre>
     *地图初始信息
     * </pre>
     */
    RES_ROLE_MAP_INFO(14, 10011),
    /**
     * <code>RES_ROLE_INIT_OVER = 10020;</code>
     *
     * <pre>
     *TODO 添加初始化
     * </pre>
     */
    RES_ROLE_INIT_OVER(15, 10020),
    /**
     * <code>REQ_GET_SHOW_ROLE_LISE = 10021;</code>
     *
     * <pre>
     *随机获取显示用角色列表
     * </pre>
     */
    REQ_GET_SHOW_ROLE_LISE(16, 10021),
    /**
     * <code>RES_GET_SHOW_ROLE_LIST = 10022;</code>
     *
     * <pre>
     *返回显示用角色列表
     * </pre>
     */
    RES_GET_SHOW_ROLE_LIST(17, 10022),
    /**
     * <code>REQ_ROLE_ENTER_DUNGEON = 10031;</code>
     *
     * <pre>
     *角色进入副本
     * </pre>
     */
    REQ_ROLE_ENTER_DUNGEON(18, 10031),
    /**
     * <code>RES_ROLE_ENTER_DUNGEON = 10032;</code>
     *
     * <pre>
     *返回
     * </pre>
     */
    RES_ROLE_ENTER_DUNGEON(19, 10032),
    /**
     * <code>RES_ROLE_DUNGEON_BALANCE = 10033;</code>
     *
     * <pre>
     *副本结算
     * </pre>
     */
    RES_ROLE_DUNGEON_BALANCE(20, 10033),
    /**
     * <code>REQ_ROLE_ENTER_TOWN = 10040;</code>
     *
     * <pre>
     *请求进入城镇
     * </pre>
     */
    REQ_ROLE_ENTER_TOWN(21, 10040),
    /**
     * <code>RES_ROLE_ENTER_TOWN = 10041;</code>
     *
     * <pre>
     *返回城镇id
     * </pre>
     */
    RES_ROLE_ENTER_TOWN(22, 10041),
    /**
     * <code>REQ_CHAT_SET = 10100;</code>
     *
     * <pre>
     **-------------	聊天[10100 - 10199]	-------------
     * </pre>
     */
    REQ_CHAT_SET(23, 10100),
    /**
     * <code>RES_CHAT_SET = 10101;</code>
     *
     * <pre>
     *聊天广播
     * </pre>
     */
    RES_CHAT_SET(24, 10101),
    /**
     * <code>REQ_CHAT_ITEMINFO = 10102;</code>
     *
     * <pre>
     *请求物品
     * </pre>
     */
    REQ_CHAT_ITEMINFO(25, 10102),
    /**
     * <code>RES_CHAT_ITEMINFO = 10103;</code>
     *
     * <pre>
     *返回物品消息 
     * </pre>
     */
    RES_CHAT_ITEMINFO(26, 10103),
    /**
     * <code>REQ_MAIL_LIST = 10201;</code>
     *
     * <pre>
     **-------------	邮件（mail）[10200-10299]	-------------
     * </pre>
     */
    REQ_MAIL_LIST(27, 10201),
    /**
     * <code>RES_MAIL_LIST = 10202;</code>
     *
     * <pre>
     *玩家邮件列表
     * </pre>
     */
    RES_MAIL_LIST(28, 10202),
    /**
     * <code>REQ_MAIL_SET_READ = 10203;</code>
     *
     * <pre>
     * 设置邮件已读状态
     * </pre>
     */
    REQ_MAIL_SET_READ(29, 10203),
    /**
     * <code>RES_MAIL_SET_READ = 10204;</code>
     *
     * <pre>
     * 设置已读返回
     * </pre>
     */
    RES_MAIL_SET_READ(30, 10204),
    /**
     * <code>REQ_MAIL_CLAIM = 10205;</code>
     *
     * <pre>
     * 领取邮件附件
     * </pre>
     */
    REQ_MAIL_CLAIM(31, 10205),
    /**
     * <code>RES_MAIL_CLAIM = 10206;</code>
     *
     * <pre>
     * 领取返回
     * </pre>
     */
    RES_MAIL_CLAIM(32, 10206),
    /**
     * <code>REQ_MAIL_DELETE = 10207;</code>
     *
     * <pre>
     * 请求删除邮件
     * </pre>
     */
    REQ_MAIL_DELETE(33, 10207),
    /**
     * <code>RES_MAIL_DELETE = 10208;</code>
     *
     * <pre>
     * 删除邮件
     * </pre>
     */
    RES_MAIL_DELETE(34, 10208),
    /**
     * <code>RES_MAIL_ADD = 10209;</code>
     *
     * <pre>
     * 新邮件信息
     * </pre>
     */
    RES_MAIL_ADD(35, 10209),
    /**
     * <code>REQ_FAMILY_LIST = 10300;</code>
     *
     * <pre>
     **------------------家族[10300 - 10399]  --------------------
     * </pre>
     */
    REQ_FAMILY_LIST(36, 10300),
    /**
     * <code>RES_FAMILY_LIST = 10301;</code>
     *
     * <pre>
     *返回家族列表
     * </pre>
     */
    RES_FAMILY_LIST(37, 10301),
    /**
     * <code>REQ_FAMILY_CREATE = 10302;</code>
     *
     * <pre>
     *创建家族
     * </pre>
     */
    REQ_FAMILY_CREATE(38, 10302),
    /**
     * <code>RES_FAMILY_CREAIE = 10303;</code>
     *
     * <pre>
     *返回创建家族
     * </pre>
     */
    RES_FAMILY_CREAIE(39, 10303),
    /**
     * <code>REQ_FAMILY_APPLY_IN = 10304;</code>
     *
     * <pre>
     *申请加入家族
     * </pre>
     */
    REQ_FAMILY_APPLY_IN(40, 10304),
    /**
     * <code>REQ_FAMILY_CANCEL_APPLY = 10305;</code>
     *
     * <pre>
     *取消申请
     * </pre>
     */
    REQ_FAMILY_CANCEL_APPLY(41, 10305),
    /**
     * <code>RES_FAMILY_APPLY_CHANGE = 10306;</code>
     *
     * <pre>
     *设置申请状态
     * </pre>
     */
    RES_FAMILY_APPLY_CHANGE(42, 10306),
    /**
     * <code>REQ_FAMILY_HOME_PAGE = 10307;</code>
     *
     * <pre>
     *请求主页
     * </pre>
     */
    REQ_FAMILY_HOME_PAGE(43, 10307),
    /**
     * <code>RES_FAMILY_HOME_PAGE = 10308;</code>
     *
     * <pre>
     *返回请求主页
     * </pre>
     */
    RES_FAMILY_HOME_PAGE(44, 10308),
    /**
     * <code>REQ_FAMILY_NOTICE_CAHNGE = 10309;</code>
     *
     * <pre>
     * 公告修改
     * </pre>
     */
    REQ_FAMILY_NOTICE_CAHNGE(45, 10309),
    /**
     * <code>RES_FAMILY_NOTICE_CHANGE = 10310;</code>
     *
     * <pre>
     * 返回公告修改
     * </pre>
     */
    RES_FAMILY_NOTICE_CHANGE(46, 10310),
    /**
     * <code>REQ_FAMILY_MEMBER_LIST = 10311;</code>
     *
     * <pre>
     *请求家族成员信息列表
     * </pre>
     */
    REQ_FAMILY_MEMBER_LIST(47, 10311),
    /**
     * <code>RES_FAMILY_MEMBER_LIST = 10312;</code>
     *
     * <pre>
     *返回请求家族成员信息列表
     * </pre>
     */
    RES_FAMILY_MEMBER_LIST(48, 10312),
    /**
     * <code>REQ_FAMILY_APPLY_LIST = 10313;</code>
     *
     * <pre>
     * 申请列表
     * </pre>
     */
    REQ_FAMILY_APPLY_LIST(49, 10313),
    /**
     * <code>RES_FAMILY_APPLY_LIST = 10314;</code>
     *
     * <pre>
     *返回申请列表
     * </pre>
     */
    RES_FAMILY_APPLY_LIST(50, 10314),
    /**
     * <code>REQ_FAMILY_TRANSFER_SHAIKH = 10315;</code>
     *
     * <pre>
     *移交族长
     * </pre>
     */
    REQ_FAMILY_TRANSFER_SHAIKH(51, 10315),
    /**
     * <code>REQ_FAMILY_APPOINT_ROLE = 10316;</code>
     *
     * <pre>
     *职位任命
     * </pre>
     */
    REQ_FAMILY_APPOINT_ROLE(52, 10316),
    /**
     * <code>RES_FAMILY_ROLE_CHANGE = 10317;</code>
     *
     * <pre>
     *职位改变
     * </pre>
     */
    RES_FAMILY_ROLE_CHANGE(53, 10317),
    /**
     * <code>REQ_FAMILY_DISPOSE_APPLY = 10318;</code>
     *
     * <pre>
     *处理申请信息
     * </pre>
     */
    REQ_FAMILY_DISPOSE_APPLY(54, 10318),
    /**
     * <code>RES_FAMILY_DISPOSE_APPLY = 10319;</code>
     *
     * <pre>
     *处理返回
     * </pre>
     */
    RES_FAMILY_DISPOSE_APPLY(55, 10319),
    /**
     * <code>REQ_FAMILY_KICK_OUT_MEMBER = 10320;</code>
     *
     * <pre>
     *踢出成员
     * </pre>
     */
    REQ_FAMILY_KICK_OUT_MEMBER(56, 10320),
    /**
     * <code>RES_FAMILY_KICK_OUT_MEMBER = 10321;</code>
     *
     * <pre>
     *踢出成员返回
     * </pre>
     */
    RES_FAMILY_KICK_OUT_MEMBER(57, 10321),
    /**
     * <code>REQ_FAMILY_EXIT = 10322;</code>
     *
     * <pre>
     *退出家族
     * </pre>
     */
    REQ_FAMILY_EXIT(58, 10322),
    /**
     * <code>RES_FAMILY_EXIT = 10323;</code>
     *
     * <pre>
     *退出家族返回
     * </pre>
     */
    RES_FAMILY_EXIT(59, 10323),
    /**
     * <code>REQ_SOCIAL_ADD = 10400;</code>
     *
     * <pre>
     **------------------社交好友[10400 - 10499]  --------------------
     * </pre>
     */
    REQ_SOCIAL_ADD(60, 10400),
    /**
     * <code>RES_SOCIAL_ADD = 10401;</code>
     *
     * <pre>
     *返回添加好友
     * </pre>
     */
    RES_SOCIAL_ADD(61, 10401),
    /**
     * <code>REQ_SOCIAL_DELETE = 10402;</code>
     *
     * <pre>
     *删除好友
     * </pre>
     */
    REQ_SOCIAL_DELETE(62, 10402),
    /**
     * <code>RES_SOCIAL_DELETE = 10403;</code>
     *
     * <pre>
     *返回删除好友
     * </pre>
     */
    RES_SOCIAL_DELETE(63, 10403),
    /**
     * <code>REQ_SOCIAL_LIST = 10404;</code>
     *
     * <pre>
     *请求列表
     * </pre>
     */
    REQ_SOCIAL_LIST(64, 10404),
    /**
     * <code>RES_SOCIAL_LIST = 10405;</code>
     *
     * <pre>
     *返回列表	
     * </pre>
     */
    RES_SOCIAL_LIST(65, 10405),
    /**
     * <code>RES_ROLE_LEVEL_CHANGE = 10500;</code>
     *
     * <pre>
     **-------------	角色[10500 - 10599]	-------------
     * </pre>
     */
    RES_ROLE_LEVEL_CHANGE(66, 10500),
    /**
     * <code>RES_ROLE_EXP_CHANGE = 10501;</code>
     *
     * <pre>
     *角色经验变化
     * </pre>
     */
    RES_ROLE_EXP_CHANGE(67, 10501),
    /**
     * <code>RES_ROLE_CURRENCY_CHANGE = 10502;</code>
     *
     * <pre>
     *角色货币变化
     * </pre>
     */
    RES_ROLE_CURRENCY_CHANGE(68, 10502),
    /**
     * <code>REQ_ROLE_ENERGY_ADDING = 100503;</code>
     *
     * <pre>
     *请求增加体力
     * </pre>
     */
    REQ_ROLE_ENERGY_ADDING(69, 100503),
    /**
     * <code>RES_ROLE_ENERGY_ADDING = 100504;</code>
     *
     * <pre>
     *增加体力返回
     * </pre>
     */
    RES_ROLE_ENERGY_ADDING(70, 100504),
    /**
     * <code>RES_BACKPACKITEM_LIST = 10700;</code>
     *
     * <pre>
     **-----------------背包系统[10700 - 10799]-------------------------
     * </pre>
     */
    RES_BACKPACKITEM_LIST(71, 10700),
    /**
     * <code>RES_BACKPACKITEM_DELETE = 10701;</code>
     *
     * <pre>
     *返回删除物品
     * </pre>
     */
    RES_BACKPACKITEM_DELETE(72, 10701),
    /**
     * <code>RES_BACKPACKITEM_ADD = 10702;</code>
     *
     * <pre>
     *返回添加物品
     * </pre>
     */
    RES_BACKPACKITEM_ADD(73, 10702),
    /**
     * <code>RES_BACKPACKITEM_NUM_CHANGE = 10703;</code>
     *
     * <pre>
     *返回物品数量改变消息
     * </pre>
     */
    RES_BACKPACKITEM_NUM_CHANGE(74, 10703),
    /**
     * <code>REQ_BACKPACK_OPEN_CELL = 10704;</code>
     *
     * <pre>
     *请求开启格子
     * </pre>
     */
    REQ_BACKPACK_OPEN_CELL(75, 10704),
    /**
     * <code>RES_BACKCELL_NUM = 10705;</code>
     *
     * <pre>
     *返回当前格子数量
     * </pre>
     */
    RES_BACKCELL_NUM(76, 10705),
    /**
     * <code>REQ_SHOPITEM_LIST = 10800;</code>
     *
     * <pre>
     **-------------	商店[10800 - 10899]	-------------
     * </pre>
     */
    REQ_SHOPITEM_LIST(77, 10800),
    /**
     * <code>RES_SHOPITEM_LIST = 10801;</code>
     *
     * <pre>
     *返回商品列表
     * </pre>
     */
    RES_SHOPITEM_LIST(78, 10801),
    /**
     * <code>REQ_SHOPITEM_BUY = 10802;</code>
     *
     * <pre>
     *请求购买商品
     * </pre>
     */
    REQ_SHOPITEM_BUY(79, 10802),
    /**
     * <code>RES_SHOPITEM_BUY = 10803;</code>
     *
     * <pre>
     *购买商品返回
     * </pre>
     */
    RES_SHOPITEM_BUY(80, 10803),
    /**
     * <code>REQ_SHOPITEM_SELL = 10804;</code>
     *
     * <pre>
     *请求出售商品
     * </pre>
     */
    REQ_SHOPITEM_SELL(81, 10804),
    /**
     * <code>RES_SHOPITEM_SELL = 10805;</code>
     *
     * <pre>
     *出售商品返回
     * </pre>
     */
    RES_SHOPITEM_SELL(82, 10805),
    /**
     * <code>REQ_MYSTERYSHOPITEM_LIST = 10806;</code>
     *
     * <pre>
     *请求神秘商品列表
     * </pre>
     */
    REQ_MYSTERYSHOPITEM_LIST(83, 10806),
    /**
     * <code>RES_MYSTERYSHOPITEM_LIST = 10807;</code>
     *
     * <pre>
     *请求神秘商品列表
     * </pre>
     */
    RES_MYSTERYSHOPITEM_LIST(84, 10807),
    /**
     * <code>REQ_MYSTERYSHOPITEM_BUY = 10808;</code>
     *
     * <pre>
     *请求购买神秘商品
     * </pre>
     */
    REQ_MYSTERYSHOPITEM_BUY(85, 10808),
    /**
     * <code>RES_MYSTERYSHOPITEM_BUY = 10809;</code>
     *
     * <pre>
     *购买神秘商品返回
     * </pre>
     */
    RES_MYSTERYSHOPITEM_BUY(86, 10809),
    /**
     * <code>REQ_MYSTERYSHOP_REFURBISH = 10810;</code>
     *
     * <pre>
     *神秘商品刷新
     * </pre>
     */
    REQ_MYSTERYSHOP_REFURBISH(87, 10810),
    /**
     * <code>RES_MYSTERYSHOP_REFURBISH = 10811;</code>
     *
     * <pre>
     *神秘商品刷新返回
     * </pre>
     */
    RES_MYSTERYSHOP_REFURBISH(88, 10811),
    /**
     * <code>REQ_WEAR_FASHION = 10900;</code>
     *
     * <pre>
     **--------------    道具[10900-11000]	--------------
     * </pre>
     */
    REQ_WEAR_FASHION(89, 10900),
    /**
     * <code>RES_WEAR_FASHION = 10901;</code>
     *
     * <pre>
     *返回穿戴时装
     * </pre>
     */
    RES_WEAR_FASHION(90, 10901),
    /**
     * <code>REQ_DISCARD_FASHION = 10902;</code>
     *
     * <pre>
     *请求卸下时装
     * </pre>
     */
    REQ_DISCARD_FASHION(91, 10902),
    /**
     * <code>RES_DISCARD_FASHION = 10903;</code>
     *
     * <pre>
     *返回卸下时装
     * </pre>
     */
    RES_DISCARD_FASHION(92, 10903),
    /**
     * <code>RES_EQUIP_SLOT = 10904;</code>
     *
     * <pre>
     *返回装备列表
     * </pre>
     */
    RES_EQUIP_SLOT(93, 10904),
    /**
     * <code>REQ_WATCH_OTHER_EQUIP_SLOT = 10905;</code>
     *
     * <pre>
     *请求察看其他玩家的装备列表
     * </pre>
     */
    REQ_WATCH_OTHER_EQUIP_SLOT(94, 10905),
    /**
     * <code>REQ_STRENGTH_EQUIP = 10906;</code>
     *
     * <pre>
     *请求强化装备
     * </pre>
     */
    REQ_STRENGTH_EQUIP(95, 10906),
    /**
     * <code>RES_STRENGTH_EQUIP = 10907;</code>
     *
     * <pre>
     *返回强化装备
     * </pre>
     */
    RES_STRENGTH_EQUIP(96, 10907),
    /**
     * <code>REQ_STRENGTH_EQUIP_INFO = 10908;</code>
     *
     * <pre>
     *请求强化装备信息
     * </pre>
     */
    REQ_STRENGTH_EQUIP_INFO(97, 10908),
    /**
     * <code>RES_STRENGTH_EQUIP_INFO = 10909;</code>
     *
     * <pre>
     *请求强化装备信息
     * </pre>
     */
    RES_STRENGTH_EQUIP_INFO(98, 10909),
    /**
     * <code>REQ_COMPOUND_EQUIP = 10910;</code>
     *
     * <pre>
     *请求合成装备
     * </pre>
     */
    REQ_COMPOUND_EQUIP(99, 10910),
    /**
     * <code>RES_COMPOUND_EQUIP = 10911;</code>
     *
     * <pre>
     *返回合成装备结果
     * </pre>
     */
    RES_COMPOUND_EQUIP(100, 10911),
    /**
     * <code>REQ_COMPOUND_MATERIAL = 10912;</code>
     *
     * <pre>
     *请求合成材料
     * </pre>
     */
    REQ_COMPOUND_MATERIAL(101, 10912),
    /**
     * <code>RES_COMPOUND_MATERIAL = 10913;</code>
     *
     * <pre>
     *返回合成材料结果
     * </pre>
     */
    RES_COMPOUND_MATERIAL(102, 10913),
    /**
     * <code>REQ_POLISH_EQUIP = 10914;</code>
     *
     * <pre>
     *请求洗练装备
     * </pre>
     */
    REQ_POLISH_EQUIP(103, 10914),
    /**
     * <code>RES_POLISH_EQUIP = 10915;</code>
     *
     * <pre>
     *返回洗练装备
     * </pre>
     */
    RES_POLISH_EQUIP(104, 10915),
    /**
     * <code>REQ_USE_ITEM = 10918;</code>
     *
     * <pre>
     *请求使用道具
     * </pre>
     */
    REQ_USE_ITEM(105, 10918),
    /**
     * <code>RES_USE_ITEM = 10919;</code>
     *
     * <pre>
     *返回使用道具
     * </pre>
     */
    RES_USE_ITEM(106, 10919),
    /**
     * <code>REQ_ADD_MISSION = 11001;</code>
     *
     * <pre>
     **--------------    任务[11001-11100]	--------------
     * </pre>
     */
    REQ_ADD_MISSION(107, 11001),
    /**
     * <code>RES_ADD_MISSION = 11002;</code>
     *
     * <pre>
     *返回接任务消息
     * </pre>
     */
    RES_ADD_MISSION(108, 11002),
    /**
     * <code>REQ_GIVE_UP_MISSION = 11003;</code>
     *
     * <pre>
     *请求放弃任务
     * </pre>
     */
    REQ_GIVE_UP_MISSION(109, 11003),
    /**
     * <code>RES_GIVE_UP_MISSION_INFO = 11004;</code>
     *
     * <pre>
     *放弃任务返回结果
     * </pre>
     */
    RES_GIVE_UP_MISSION_INFO(110, 11004),
    /**
     * <code>RES_ALL_MISSION_LIST = 11005;</code>
     *
     * <pre>
     *玩家所有任务信息
     * </pre>
     */
    RES_ALL_MISSION_LIST(111, 11005),
    /**
     * <code>RES_ON_KILL = 11006;</code>
     *
     * <pre>
     *击杀任务信息
     * </pre>
     */
    RES_ON_KILL(112, 11006),
    /**
     * <code>REQ_ACCCEPT_REWARD = 11007;</code>
     *
     * <pre>
     *领取奖励
     * </pre>
     */
    REQ_ACCCEPT_REWARD(113, 11007),
    /**
     * <code>RES_ACCCEPT_REWARD = 11008;</code>
     *
     * <pre>
     *返回领取奖励
     * </pre>
     */
    RES_ACCCEPT_REWARD(114, 11008),
    /**
     * <code>REQ_OPEN_HOLESITE = 11101;</code>
     *
     * <pre>
     *请求开启孔位
     * </pre>
     */
    REQ_OPEN_HOLESITE(115, 11101),
    /**
     * <code>RES_OPEN_HOLESITE = 11102;</code>
     *
     * <pre>
     *返回开启
     * </pre>
     */
    RES_OPEN_HOLESITE(116, 11102),
    /**
     * <code>REQ_INLAY_HOLESITE = 11103;</code>
     *
     * <pre>
     *请求镶嵌
     * </pre>
     */
    REQ_INLAY_HOLESITE(117, 11103),
    /**
     * <code>RES_INLAY_HOLESITE = 11104;</code>
     *
     * <pre>
     *返回镶嵌
     * </pre>
     */
    RES_INLAY_HOLESITE(118, 11104),
    /**
     * <code>REQ_REPLACE_HOLESITE = 11105;</code>
     *
     * <pre>
     *请求更换
     * </pre>
     */
    REQ_REPLACE_HOLESITE(119, 11105),
    /**
     * <code>RES_REPLACE_HOLESITE = 11106;</code>
     *
     * <pre>
     *返回更换
     * </pre>
     */
    RES_REPLACE_HOLESITE(120, 11106),
    /**
     * <code>REQ_LOGIC_LOGIN = 20000;</code>
     *
     * <pre>
     **-------------	地图[20000 - 20099]	-------------
     * </pre>
     */
    REQ_LOGIC_LOGIN(121, 20000),
    /**
     * <code>RES_LOGIC_LOGIN = 20001;</code>
     *
     * <pre>
     *登录逻辑服返回	
     * </pre>
     */
    RES_LOGIC_LOGIN(122, 20001),
    /**
     * <code>REQ_GET_MAP_INITINFO = 20002;</code>
     *
     * <pre>
     *客户端获取地图初始信息
     * </pre>
     */
    REQ_GET_MAP_INITINFO(123, 20002),
    /**
     * <code>RES_GET_MAP_INITINFO = 20003;</code>
     *
     * <pre>
     *服务器返回地图初始化信息
     * </pre>
     */
    RES_GET_MAP_INITINFO(124, 20003),
    /**
     * <code>REQ_MAP_ENTER = 20004;</code>
     *
     * <pre>
     *客户端加载结束后，请求进入地图
     * </pre>
     */
    REQ_MAP_ENTER(125, 20004),
    /**
     * <code>RES_MAP_ENTER = 20005;</code>
     *
     * <pre>
     *客户端加载结束后，请求进入地图的返回
     * </pre>
     */
    RES_MAP_ENTER(126, 20005),
    /**
     * <code>RES_MAP_BEGIN = 20006;</code>
     *
     * <pre>
     *副本开始
     * </pre>
     */
    RES_MAP_BEGIN(127, 20006),
    /**
     * <code>RES_MAP_ROLE_CON_CHANGE = 20007;</code>
     *
     * <pre>
     *地图中玩家角色在线状态改变
     * </pre>
     */
    RES_MAP_ROLE_CON_CHANGE(128, 20007),
    /**
     * <code>REQ_MAP_EXIT = 20008;</code>
     *
     * <pre>
     *主动请求退出地图
     * </pre>
     */
    REQ_MAP_EXIT(129, 20008),
    /**
     * <code>RES_MAP_EXIT = 20009;</code>
     *
     * <pre>
     *角色退出地图
     * </pre>
     */
    RES_MAP_EXIT(130, 20009),
    /**
     * <code>REQ_MAP_ON_EVENT = 20010;</code>
     *
     * <pre>
     *客户端触发地图事件
     * </pre>
     */
    REQ_MAP_ON_EVENT(131, 20010),
    /**
     * <code>RES_MAP_ON_EVENT = 20011;</code>
     *
     * <pre>
     *服务器触发地图事件
     * </pre>
     */
    RES_MAP_ON_EVENT(132, 20011),
    /**
     * <code>REQ_MAP_STOP_MOVE = 20018;</code>
     *
     * <pre>
     *单位停止移动
     * </pre>
     */
    REQ_MAP_STOP_MOVE(133, 20018),
    /**
     * <code>RES_MAP_BROADCAST_STOP = 20019;</code>
     *
     * <pre>
     *广播单位停止移动
     * </pre>
     */
    RES_MAP_BROADCAST_STOP(134, 20019),
    /**
     * <code>REQ_MAP_ROLE_MOVE = 20020;</code>
     *
     * <pre>
     *角色移动信息提交
     * </pre>
     */
    REQ_MAP_ROLE_MOVE(135, 20020),
    /**
     * <code>RES_MAP_BROADCAST_MOVE = 20021;</code>
     *
     * <pre>
     *广播地图移动消息
     * </pre>
     */
    RES_MAP_BROADCAST_MOVE(136, 20021),
    /**
     * <code>RES_MAP_BROADCAST_NEW = 20022;</code>
     *
     * <pre>
     *广播新单位出现
     * </pre>
     */
    RES_MAP_BROADCAST_NEW(137, 20022),
    /**
     * <code>RES_MAP_BROADCAST_REMOVE = 20023;</code>
     *
     * <pre>
     *广播单位移除
     * </pre>
     */
    RES_MAP_BROADCAST_REMOVE(138, 20023),
    /**
     * <code>REQ_MAP_ROLE_REBORN = 20024;</code>
     *
     * <pre>
     *请求地图单位复活
     * </pre>
     */
    REQ_MAP_ROLE_REBORN(139, 20024),
    /**
     * <code>RES_MAP_ROLE_REBORN = 20025;</code>
     *
     * <pre>
     *返回地图单位复活
     * </pre>
     */
    RES_MAP_ROLE_REBORN(140, 20025),
    /**
     * <code>RES_MAP_UNIT_HP_CHANGE = 20027;</code>
     *
     * <pre>
     *广播地图单位血量变化
     * </pre>
     */
    RES_MAP_UNIT_HP_CHANGE(141, 20027),
    /**
     * <code>RES_BROAD_REBORN_STATUES = 20028;</code>
     *
     * <pre>
     *广播地图单位复活
     * </pre>
     */
    RES_BROAD_REBORN_STATUES(142, 20028),
    /**
     * <code>RES_MAP_UNIT_MP_CHANGE = 20029;</code>
     *
     * <pre>
     *广播MP变化
     * </pre>
     */
    RES_MAP_UNIT_MP_CHANGE(143, 20029),
    /**
     * <code>RES_MAP_UNIT_DEATH = 20030;</code>
     *
     * <pre>
     *广播单位死亡
     * </pre>
     */
    RES_MAP_UNIT_DEATH(144, 20030),
    /**
     * <code>RES_UNIT_FURY_CHANGE = 20031;</code>
     *
     * <pre>
     *广播怒气变化
     * </pre>
     */
    RES_UNIT_FURY_CHANGE(145, 20031),
    /**
     * <code>RES_MAP_DROPITEM = 20040;</code>
     *
     * <pre>
     *掉落物品
     * </pre>
     */
    RES_MAP_DROPITEM(146, 20040),
    /**
     * <code>RES_BUFF_ADD = 20201;</code>
     *
     * <pre>
     *增加buff
     * </pre>
     */
    RES_BUFF_ADD(147, 20201),
    /**
     * <code>RES_BUFF_REMOVE = 20202;</code>
     *
     * <pre>
     *buff移除
     * </pre>
     */
    RES_BUFF_REMOVE(148, 20202),
    /**
     * <code>RES_BUFF_UPDATE = 20203;</code>
     *
     * <pre>
     *buff更新
     * </pre>
     */
    RES_BUFF_UPDATE(149, 20203),
    /**
     * <code>RES_WHISPER_SKILL_A = 20211;</code>
     *
     * <pre>
     *青羽寨技能A
     * </pre>
     */
    RES_WHISPER_SKILL_A(150, 20211),
    /**
     * <code>RES_WHISPER_SKILL_A_A = 20212;</code>
     *
     * <pre>
     *青羽寨技能AA
     * </pre>
     */
    RES_WHISPER_SKILL_A_A(151, 20212),
    /**
     * <code>RES_WHISPER_SKILL_A_A_A = 20213;</code>
     *
     * <pre>
     *青羽寨技能AAA
     * </pre>
     */
    RES_WHISPER_SKILL_A_A_A(152, 20213),
    /**
     * <code>RES_WHISPER_SKILL_A_A_C = 20214;</code>
     *
     * <pre>
     *青羽寨技能AAC
     * </pre>
     */
    RES_WHISPER_SKILL_A_A_C(153, 20214),
    /**
     * <code>RES_WHISPER_SKILL_A_B = 20215;</code>
     *
     * <pre>
     *青羽寨技能AB
     * </pre>
     */
    RES_WHISPER_SKILL_A_B(154, 20215),
    /**
     * <code>RES_WHISPER_SKILL_A_B_C = 20216;</code>
     *
     * <pre>
     *青羽寨技能ABC
     * </pre>
     */
    RES_WHISPER_SKILL_A_B_C(155, 20216),
    /**
     * <code>RES_WHISPER_SKILL_A_C = 20217;</code>
     *
     * <pre>
     *青羽寨技能AC
     * </pre>
     */
    RES_WHISPER_SKILL_A_C(156, 20217),
    /**
     * <code>RES_WHISPER_SKILL_B = 20218;</code>
     *
     * <pre>
     *青羽寨技能B
     * </pre>
     */
    RES_WHISPER_SKILL_B(157, 20218),
    /**
     * <code>RES_WHISPER_SKILL_B_A = 20219;</code>
     *
     * <pre>
     *青羽寨技能BA
     * </pre>
     */
    RES_WHISPER_SKILL_B_A(158, 20219),
    /**
     * <code>RES_WHISPER_SKILL_B_A_C = 20220;</code>
     *
     * <pre>
     *青羽寨技能BAC
     * </pre>
     */
    RES_WHISPER_SKILL_B_A_C(159, 20220),
    /**
     * <code>RES_WHISPER_SKILL_B_B = 20221;</code>
     *
     * <pre>
     *青羽寨技能BB
     * </pre>
     */
    RES_WHISPER_SKILL_B_B(160, 20221),
    /**
     * <code>RES_WHISPER_SKILL_B_B_B = 20222;</code>
     *
     * <pre>
     *青羽寨技能BBB
     * </pre>
     */
    RES_WHISPER_SKILL_B_B_B(161, 20222),
    /**
     * <code>RES_WHISPER_SKILL_B_B_C = 20223;</code>
     *
     * <pre>
     *青羽寨技能BBC
     * </pre>
     */
    RES_WHISPER_SKILL_B_B_C(162, 20223),
    /**
     * <code>RES_WHISPER_SKILL_B_C = 20224;</code>
     *
     * <pre>
     *青羽寨技能BC
     * </pre>
     */
    RES_WHISPER_SKILL_B_C(163, 20224),
    /**
     * <code>RES_WHISPER_SKILL_C = 20225;</code>
     *
     * <pre>
     *青羽寨技能C
     * </pre>
     */
    RES_WHISPER_SKILL_C(164, 20225),
    /**
     * <code>RES_WHISPER_SKILL_D = 20226;</code>
     *
     * <pre>
     *青羽寨技能D
     * </pre>
     */
    RES_WHISPER_SKILL_D(165, 20226),
    /**
     * <code>RES_WARRIOR_SKILL_A = 20241;</code>
     *
     * <pre>
     *日月盟技能A
     * </pre>
     */
    RES_WARRIOR_SKILL_A(166, 20241),
    /**
     * <code>RES_WARRIOR_SKILL_A_A = 20242;</code>
     *
     * <pre>
     *日月盟技能AA
     * </pre>
     */
    RES_WARRIOR_SKILL_A_A(167, 20242),
    /**
     * <code>RES_WARRIOR_SKILL_A_A_A = 20243;</code>
     *
     * <pre>
     *日月盟技能AAA
     * </pre>
     */
    RES_WARRIOR_SKILL_A_A_A(168, 20243),
    /**
     * <code>RES_WARRIOR_SKILL_A_A_C = 20244;</code>
     *
     * <pre>
     *日月盟技能AAC
     * </pre>
     */
    RES_WARRIOR_SKILL_A_A_C(169, 20244),
    /**
     * <code>RES_WARRIOR_SKILL_A_B = 20245;</code>
     *
     * <pre>
     *日月盟技能AB
     * </pre>
     */
    RES_WARRIOR_SKILL_A_B(170, 20245),
    /**
     * <code>RES_WARRIOR_SKILL_A_B_C = 20246;</code>
     *
     * <pre>
     *日月盟技能ABC
     * </pre>
     */
    RES_WARRIOR_SKILL_A_B_C(171, 20246),
    /**
     * <code>RES_WARRIOR_SKILL_A_C = 20247;</code>
     *
     * <pre>
     *日月盟技能AC
     * </pre>
     */
    RES_WARRIOR_SKILL_A_C(172, 20247),
    /**
     * <code>RES_WARRIOR_SKILL_B = 20248;</code>
     *
     * <pre>
     *日月盟技能B
     * </pre>
     */
    RES_WARRIOR_SKILL_B(173, 20248),
    /**
     * <code>RES_WARRIOR_SKILL_B_A = 20249;</code>
     *
     * <pre>
     *日月盟技能BA
     * </pre>
     */
    RES_WARRIOR_SKILL_B_A(174, 20249),
    /**
     * <code>RES_WARRIOR_SKILL_B_A_C = 20250;</code>
     *
     * <pre>
     *日月盟技能BAC
     * </pre>
     */
    RES_WARRIOR_SKILL_B_A_C(175, 20250),
    /**
     * <code>RES_WARRIOR_SKILL_B_B = 20251;</code>
     *
     * <pre>
     *日月盟技能BB
     * </pre>
     */
    RES_WARRIOR_SKILL_B_B(176, 20251),
    /**
     * <code>RES_WARRIOR_SKILL_B_B_B = 20252;</code>
     *
     * <pre>
     *日月盟技能BBB
     * </pre>
     */
    RES_WARRIOR_SKILL_B_B_B(177, 20252),
    /**
     * <code>RES_WARRIOR_SKILL_B_B_C = 20253;</code>
     *
     * <pre>
     *日月盟技能BBC
     * </pre>
     */
    RES_WARRIOR_SKILL_B_B_C(178, 20253),
    /**
     * <code>RES_WARRIOR_SKILL_B_C = 20254;</code>
     *
     * <pre>
     *日月盟技能BC
     * </pre>
     */
    RES_WARRIOR_SKILL_B_C(179, 20254),
    /**
     * <code>RES_WARRIOR_SKILL_C = 20255;</code>
     *
     * <pre>
     *日月盟技能C
     * </pre>
     */
    RES_WARRIOR_SKILL_C(180, 20255),
    /**
     * <code>RES_WARRIOR_SKILL_D = 20256;</code>
     *
     * <pre>
     *日月盟技能D
     * </pre>
     */
    RES_WARRIOR_SKILL_D(181, 20256),
    /**
     * <code>RES_MONSTER_NORMAL_ATTACK_SKILL = 20330;</code>
     *
     * <pre>
     *怪物普通物理攻击
     * </pre>
     */
    RES_MONSTER_NORMAL_ATTACK_SKILL(182, 20330),
    /**
     * <code>RES_TEST = 20310;</code>
     *
     * <pre>
     *测试消息
     * </pre>
     */
    RES_TEST(183, 20310),
    ;

    /**
     * <code>RES_ALERT = 9000;</code>
     *
     * <pre>
     **-------------	共用消息号[9000 - 9999]		-------------
     * </pre>
     */
    public static final int RES_ALERT_VALUE = 9000;
    /**
     * <code>REQ_HEARTBEAT = 9001;</code>
     *
     * <pre>
     *心跳包（客户端上传本地时间）
     * </pre>
     */
    public static final int REQ_HEARTBEAT_VALUE = 9001;
    /**
     * <code>RES_HEARTBEAT = 9002;</code>
     *
     * <pre>
     *服务器返回系统时间
     * </pre>
     */
    public static final int RES_HEARTBEAT_VALUE = 9002;
    /**
     * <code>REQ_LOGIN_GLOBAL = 10000;</code>
     *
     * <pre>
     **-------------	登陆[10000 - 10099]	-------------
     * </pre>
     */
    public static final int REQ_LOGIN_GLOBAL_VALUE = 10000;
    /**
     * <code>RES_LOGIN_GLOBAL = 10001;</code>
     *
     * <pre>
     *登陆结果
     * </pre>
     */
    public static final int RES_LOGIN_GLOBAL_VALUE = 10001;
    /**
     * <code>REQ_ROLE_LIST = 10002;</code>
     *
     * <pre>
     *请求角色列表
     * </pre>
     */
    public static final int REQ_ROLE_LIST_VALUE = 10002;
    /**
     * <code>RES_ROLE_LIST = 10003;</code>
     *
     * <pre>
     *返回角色列表
     * </pre>
     */
    public static final int RES_ROLE_LIST_VALUE = 10003;
    /**
     * <code>REQ_ROLE_CREATE = 10004;</code>
     *
     * <pre>
     *创建角色
     * </pre>
     */
    public static final int REQ_ROLE_CREATE_VALUE = 10004;
    /**
     * <code>RES_ROLE_CREATE = 10005;</code>
     *
     * <pre>
     *创建角色返回
     * </pre>
     */
    public static final int RES_ROLE_CREATE_VALUE = 10005;
    /**
     * <code>REQ_ROLE_DELETE = 10006;</code>
     *
     * <pre>
     *删除角色
     * </pre>
     */
    public static final int REQ_ROLE_DELETE_VALUE = 10006;
    /**
     * <code>RES_ROLE_DELETE = 10007;</code>
     *
     * <pre>
     *删除角色确认
     * </pre>
     */
    public static final int RES_ROLE_DELETE_VALUE = 10007;
    /**
     * <code>REQ_ROLE_ENTER_GAME = 10008;</code>
     *
     * <pre>
     *选择角色进入游戏
     * </pre>
     */
    public static final int REQ_ROLE_ENTER_GAME_VALUE = 10008;
    /**
     * <code>RES_ROLE_ENTER_GAME = 10009;</code>
     *
     * <pre>
     *进入游戏返回
     * </pre>
     */
    public static final int RES_ROLE_ENTER_GAME_VALUE = 10009;
    /**
     * <code>RES_ROLE_BASE_INFO = 10010;</code>
     *
     * <pre>
     *角色基础信息
     * </pre>
     */
    public static final int RES_ROLE_BASE_INFO_VALUE = 10010;
    /**
     * <code>RES_ROLE_MAP_INFO = 10011;</code>
     *
     * <pre>
     *地图初始信息
     * </pre>
     */
    public static final int RES_ROLE_MAP_INFO_VALUE = 10011;
    /**
     * <code>RES_ROLE_INIT_OVER = 10020;</code>
     *
     * <pre>
     *TODO 添加初始化
     * </pre>
     */
    public static final int RES_ROLE_INIT_OVER_VALUE = 10020;
    /**
     * <code>REQ_GET_SHOW_ROLE_LISE = 10021;</code>
     *
     * <pre>
     *随机获取显示用角色列表
     * </pre>
     */
    public static final int REQ_GET_SHOW_ROLE_LISE_VALUE = 10021;
    /**
     * <code>RES_GET_SHOW_ROLE_LIST = 10022;</code>
     *
     * <pre>
     *返回显示用角色列表
     * </pre>
     */
    public static final int RES_GET_SHOW_ROLE_LIST_VALUE = 10022;
    /**
     * <code>REQ_ROLE_ENTER_DUNGEON = 10031;</code>
     *
     * <pre>
     *角色进入副本
     * </pre>
     */
    public static final int REQ_ROLE_ENTER_DUNGEON_VALUE = 10031;
    /**
     * <code>RES_ROLE_ENTER_DUNGEON = 10032;</code>
     *
     * <pre>
     *返回
     * </pre>
     */
    public static final int RES_ROLE_ENTER_DUNGEON_VALUE = 10032;
    /**
     * <code>RES_ROLE_DUNGEON_BALANCE = 10033;</code>
     *
     * <pre>
     *副本结算
     * </pre>
     */
    public static final int RES_ROLE_DUNGEON_BALANCE_VALUE = 10033;
    /**
     * <code>REQ_ROLE_ENTER_TOWN = 10040;</code>
     *
     * <pre>
     *请求进入城镇
     * </pre>
     */
    public static final int REQ_ROLE_ENTER_TOWN_VALUE = 10040;
    /**
     * <code>RES_ROLE_ENTER_TOWN = 10041;</code>
     *
     * <pre>
     *返回城镇id
     * </pre>
     */
    public static final int RES_ROLE_ENTER_TOWN_VALUE = 10041;
    /**
     * <code>REQ_CHAT_SET = 10100;</code>
     *
     * <pre>
     **-------------	聊天[10100 - 10199]	-------------
     * </pre>
     */
    public static final int REQ_CHAT_SET_VALUE = 10100;
    /**
     * <code>RES_CHAT_SET = 10101;</code>
     *
     * <pre>
     *聊天广播
     * </pre>
     */
    public static final int RES_CHAT_SET_VALUE = 10101;
    /**
     * <code>REQ_CHAT_ITEMINFO = 10102;</code>
     *
     * <pre>
     *请求物品
     * </pre>
     */
    public static final int REQ_CHAT_ITEMINFO_VALUE = 10102;
    /**
     * <code>RES_CHAT_ITEMINFO = 10103;</code>
     *
     * <pre>
     *返回物品消息 
     * </pre>
     */
    public static final int RES_CHAT_ITEMINFO_VALUE = 10103;
    /**
     * <code>REQ_MAIL_LIST = 10201;</code>
     *
     * <pre>
     **-------------	邮件（mail）[10200-10299]	-------------
     * </pre>
     */
    public static final int REQ_MAIL_LIST_VALUE = 10201;
    /**
     * <code>RES_MAIL_LIST = 10202;</code>
     *
     * <pre>
     *玩家邮件列表
     * </pre>
     */
    public static final int RES_MAIL_LIST_VALUE = 10202;
    /**
     * <code>REQ_MAIL_SET_READ = 10203;</code>
     *
     * <pre>
     * 设置邮件已读状态
     * </pre>
     */
    public static final int REQ_MAIL_SET_READ_VALUE = 10203;
    /**
     * <code>RES_MAIL_SET_READ = 10204;</code>
     *
     * <pre>
     * 设置已读返回
     * </pre>
     */
    public static final int RES_MAIL_SET_READ_VALUE = 10204;
    /**
     * <code>REQ_MAIL_CLAIM = 10205;</code>
     *
     * <pre>
     * 领取邮件附件
     * </pre>
     */
    public static final int REQ_MAIL_CLAIM_VALUE = 10205;
    /**
     * <code>RES_MAIL_CLAIM = 10206;</code>
     *
     * <pre>
     * 领取返回
     * </pre>
     */
    public static final int RES_MAIL_CLAIM_VALUE = 10206;
    /**
     * <code>REQ_MAIL_DELETE = 10207;</code>
     *
     * <pre>
     * 请求删除邮件
     * </pre>
     */
    public static final int REQ_MAIL_DELETE_VALUE = 10207;
    /**
     * <code>RES_MAIL_DELETE = 10208;</code>
     *
     * <pre>
     * 删除邮件
     * </pre>
     */
    public static final int RES_MAIL_DELETE_VALUE = 10208;
    /**
     * <code>RES_MAIL_ADD = 10209;</code>
     *
     * <pre>
     * 新邮件信息
     * </pre>
     */
    public static final int RES_MAIL_ADD_VALUE = 10209;
    /**
     * <code>REQ_FAMILY_LIST = 10300;</code>
     *
     * <pre>
     **------------------家族[10300 - 10399]  --------------------
     * </pre>
     */
    public static final int REQ_FAMILY_LIST_VALUE = 10300;
    /**
     * <code>RES_FAMILY_LIST = 10301;</code>
     *
     * <pre>
     *返回家族列表
     * </pre>
     */
    public static final int RES_FAMILY_LIST_VALUE = 10301;
    /**
     * <code>REQ_FAMILY_CREATE = 10302;</code>
     *
     * <pre>
     *创建家族
     * </pre>
     */
    public static final int REQ_FAMILY_CREATE_VALUE = 10302;
    /**
     * <code>RES_FAMILY_CREAIE = 10303;</code>
     *
     * <pre>
     *返回创建家族
     * </pre>
     */
    public static final int RES_FAMILY_CREAIE_VALUE = 10303;
    /**
     * <code>REQ_FAMILY_APPLY_IN = 10304;</code>
     *
     * <pre>
     *申请加入家族
     * </pre>
     */
    public static final int REQ_FAMILY_APPLY_IN_VALUE = 10304;
    /**
     * <code>REQ_FAMILY_CANCEL_APPLY = 10305;</code>
     *
     * <pre>
     *取消申请
     * </pre>
     */
    public static final int REQ_FAMILY_CANCEL_APPLY_VALUE = 10305;
    /**
     * <code>RES_FAMILY_APPLY_CHANGE = 10306;</code>
     *
     * <pre>
     *设置申请状态
     * </pre>
     */
    public static final int RES_FAMILY_APPLY_CHANGE_VALUE = 10306;
    /**
     * <code>REQ_FAMILY_HOME_PAGE = 10307;</code>
     *
     * <pre>
     *请求主页
     * </pre>
     */
    public static final int REQ_FAMILY_HOME_PAGE_VALUE = 10307;
    /**
     * <code>RES_FAMILY_HOME_PAGE = 10308;</code>
     *
     * <pre>
     *返回请求主页
     * </pre>
     */
    public static final int RES_FAMILY_HOME_PAGE_VALUE = 10308;
    /**
     * <code>REQ_FAMILY_NOTICE_CAHNGE = 10309;</code>
     *
     * <pre>
     * 公告修改
     * </pre>
     */
    public static final int REQ_FAMILY_NOTICE_CAHNGE_VALUE = 10309;
    /**
     * <code>RES_FAMILY_NOTICE_CHANGE = 10310;</code>
     *
     * <pre>
     * 返回公告修改
     * </pre>
     */
    public static final int RES_FAMILY_NOTICE_CHANGE_VALUE = 10310;
    /**
     * <code>REQ_FAMILY_MEMBER_LIST = 10311;</code>
     *
     * <pre>
     *请求家族成员信息列表
     * </pre>
     */
    public static final int REQ_FAMILY_MEMBER_LIST_VALUE = 10311;
    /**
     * <code>RES_FAMILY_MEMBER_LIST = 10312;</code>
     *
     * <pre>
     *返回请求家族成员信息列表
     * </pre>
     */
    public static final int RES_FAMILY_MEMBER_LIST_VALUE = 10312;
    /**
     * <code>REQ_FAMILY_APPLY_LIST = 10313;</code>
     *
     * <pre>
     * 申请列表
     * </pre>
     */
    public static final int REQ_FAMILY_APPLY_LIST_VALUE = 10313;
    /**
     * <code>RES_FAMILY_APPLY_LIST = 10314;</code>
     *
     * <pre>
     *返回申请列表
     * </pre>
     */
    public static final int RES_FAMILY_APPLY_LIST_VALUE = 10314;
    /**
     * <code>REQ_FAMILY_TRANSFER_SHAIKH = 10315;</code>
     *
     * <pre>
     *移交族长
     * </pre>
     */
    public static final int REQ_FAMILY_TRANSFER_SHAIKH_VALUE = 10315;
    /**
     * <code>REQ_FAMILY_APPOINT_ROLE = 10316;</code>
     *
     * <pre>
     *职位任命
     * </pre>
     */
    public static final int REQ_FAMILY_APPOINT_ROLE_VALUE = 10316;
    /**
     * <code>RES_FAMILY_ROLE_CHANGE = 10317;</code>
     *
     * <pre>
     *职位改变
     * </pre>
     */
    public static final int RES_FAMILY_ROLE_CHANGE_VALUE = 10317;
    /**
     * <code>REQ_FAMILY_DISPOSE_APPLY = 10318;</code>
     *
     * <pre>
     *处理申请信息
     * </pre>
     */
    public static final int REQ_FAMILY_DISPOSE_APPLY_VALUE = 10318;
    /**
     * <code>RES_FAMILY_DISPOSE_APPLY = 10319;</code>
     *
     * <pre>
     *处理返回
     * </pre>
     */
    public static final int RES_FAMILY_DISPOSE_APPLY_VALUE = 10319;
    /**
     * <code>REQ_FAMILY_KICK_OUT_MEMBER = 10320;</code>
     *
     * <pre>
     *踢出成员
     * </pre>
     */
    public static final int REQ_FAMILY_KICK_OUT_MEMBER_VALUE = 10320;
    /**
     * <code>RES_FAMILY_KICK_OUT_MEMBER = 10321;</code>
     *
     * <pre>
     *踢出成员返回
     * </pre>
     */
    public static final int RES_FAMILY_KICK_OUT_MEMBER_VALUE = 10321;
    /**
     * <code>REQ_FAMILY_EXIT = 10322;</code>
     *
     * <pre>
     *退出家族
     * </pre>
     */
    public static final int REQ_FAMILY_EXIT_VALUE = 10322;
    /**
     * <code>RES_FAMILY_EXIT = 10323;</code>
     *
     * <pre>
     *退出家族返回
     * </pre>
     */
    public static final int RES_FAMILY_EXIT_VALUE = 10323;
    /**
     * <code>REQ_SOCIAL_ADD = 10400;</code>
     *
     * <pre>
     **------------------社交好友[10400 - 10499]  --------------------
     * </pre>
     */
    public static final int REQ_SOCIAL_ADD_VALUE = 10400;
    /**
     * <code>RES_SOCIAL_ADD = 10401;</code>
     *
     * <pre>
     *返回添加好友
     * </pre>
     */
    public static final int RES_SOCIAL_ADD_VALUE = 10401;
    /**
     * <code>REQ_SOCIAL_DELETE = 10402;</code>
     *
     * <pre>
     *删除好友
     * </pre>
     */
    public static final int REQ_SOCIAL_DELETE_VALUE = 10402;
    /**
     * <code>RES_SOCIAL_DELETE = 10403;</code>
     *
     * <pre>
     *返回删除好友
     * </pre>
     */
    public static final int RES_SOCIAL_DELETE_VALUE = 10403;
    /**
     * <code>REQ_SOCIAL_LIST = 10404;</code>
     *
     * <pre>
     *请求列表
     * </pre>
     */
    public static final int REQ_SOCIAL_LIST_VALUE = 10404;
    /**
     * <code>RES_SOCIAL_LIST = 10405;</code>
     *
     * <pre>
     *返回列表	
     * </pre>
     */
    public static final int RES_SOCIAL_LIST_VALUE = 10405;
    /**
     * <code>RES_ROLE_LEVEL_CHANGE = 10500;</code>
     *
     * <pre>
     **-------------	角色[10500 - 10599]	-------------
     * </pre>
     */
    public static final int RES_ROLE_LEVEL_CHANGE_VALUE = 10500;
    /**
     * <code>RES_ROLE_EXP_CHANGE = 10501;</code>
     *
     * <pre>
     *角色经验变化
     * </pre>
     */
    public static final int RES_ROLE_EXP_CHANGE_VALUE = 10501;
    /**
     * <code>RES_ROLE_CURRENCY_CHANGE = 10502;</code>
     *
     * <pre>
     *角色货币变化
     * </pre>
     */
    public static final int RES_ROLE_CURRENCY_CHANGE_VALUE = 10502;
    /**
     * <code>REQ_ROLE_ENERGY_ADDING = 100503;</code>
     *
     * <pre>
     *请求增加体力
     * </pre>
     */
    public static final int REQ_ROLE_ENERGY_ADDING_VALUE = 100503;
    /**
     * <code>RES_ROLE_ENERGY_ADDING = 100504;</code>
     *
     * <pre>
     *增加体力返回
     * </pre>
     */
    public static final int RES_ROLE_ENERGY_ADDING_VALUE = 100504;
    /**
     * <code>RES_BACKPACKITEM_LIST = 10700;</code>
     *
     * <pre>
     **-----------------背包系统[10700 - 10799]-------------------------
     * </pre>
     */
    public static final int RES_BACKPACKITEM_LIST_VALUE = 10700;
    /**
     * <code>RES_BACKPACKITEM_DELETE = 10701;</code>
     *
     * <pre>
     *返回删除物品
     * </pre>
     */
    public static final int RES_BACKPACKITEM_DELETE_VALUE = 10701;
    /**
     * <code>RES_BACKPACKITEM_ADD = 10702;</code>
     *
     * <pre>
     *返回添加物品
     * </pre>
     */
    public static final int RES_BACKPACKITEM_ADD_VALUE = 10702;
    /**
     * <code>RES_BACKPACKITEM_NUM_CHANGE = 10703;</code>
     *
     * <pre>
     *返回物品数量改变消息
     * </pre>
     */
    public static final int RES_BACKPACKITEM_NUM_CHANGE_VALUE = 10703;
    /**
     * <code>REQ_BACKPACK_OPEN_CELL = 10704;</code>
     *
     * <pre>
     *请求开启格子
     * </pre>
     */
    public static final int REQ_BACKPACK_OPEN_CELL_VALUE = 10704;
    /**
     * <code>RES_BACKCELL_NUM = 10705;</code>
     *
     * <pre>
     *返回当前格子数量
     * </pre>
     */
    public static final int RES_BACKCELL_NUM_VALUE = 10705;
    /**
     * <code>REQ_SHOPITEM_LIST = 10800;</code>
     *
     * <pre>
     **-------------	商店[10800 - 10899]	-------------
     * </pre>
     */
    public static final int REQ_SHOPITEM_LIST_VALUE = 10800;
    /**
     * <code>RES_SHOPITEM_LIST = 10801;</code>
     *
     * <pre>
     *返回商品列表
     * </pre>
     */
    public static final int RES_SHOPITEM_LIST_VALUE = 10801;
    /**
     * <code>REQ_SHOPITEM_BUY = 10802;</code>
     *
     * <pre>
     *请求购买商品
     * </pre>
     */
    public static final int REQ_SHOPITEM_BUY_VALUE = 10802;
    /**
     * <code>RES_SHOPITEM_BUY = 10803;</code>
     *
     * <pre>
     *购买商品返回
     * </pre>
     */
    public static final int RES_SHOPITEM_BUY_VALUE = 10803;
    /**
     * <code>REQ_SHOPITEM_SELL = 10804;</code>
     *
     * <pre>
     *请求出售商品
     * </pre>
     */
    public static final int REQ_SHOPITEM_SELL_VALUE = 10804;
    /**
     * <code>RES_SHOPITEM_SELL = 10805;</code>
     *
     * <pre>
     *出售商品返回
     * </pre>
     */
    public static final int RES_SHOPITEM_SELL_VALUE = 10805;
    /**
     * <code>REQ_MYSTERYSHOPITEM_LIST = 10806;</code>
     *
     * <pre>
     *请求神秘商品列表
     * </pre>
     */
    public static final int REQ_MYSTERYSHOPITEM_LIST_VALUE = 10806;
    /**
     * <code>RES_MYSTERYSHOPITEM_LIST = 10807;</code>
     *
     * <pre>
     *请求神秘商品列表
     * </pre>
     */
    public static final int RES_MYSTERYSHOPITEM_LIST_VALUE = 10807;
    /**
     * <code>REQ_MYSTERYSHOPITEM_BUY = 10808;</code>
     *
     * <pre>
     *请求购买神秘商品
     * </pre>
     */
    public static final int REQ_MYSTERYSHOPITEM_BUY_VALUE = 10808;
    /**
     * <code>RES_MYSTERYSHOPITEM_BUY = 10809;</code>
     *
     * <pre>
     *购买神秘商品返回
     * </pre>
     */
    public static final int RES_MYSTERYSHOPITEM_BUY_VALUE = 10809;
    /**
     * <code>REQ_MYSTERYSHOP_REFURBISH = 10810;</code>
     *
     * <pre>
     *神秘商品刷新
     * </pre>
     */
    public static final int REQ_MYSTERYSHOP_REFURBISH_VALUE = 10810;
    /**
     * <code>RES_MYSTERYSHOP_REFURBISH = 10811;</code>
     *
     * <pre>
     *神秘商品刷新返回
     * </pre>
     */
    public static final int RES_MYSTERYSHOP_REFURBISH_VALUE = 10811;
    /**
     * <code>REQ_WEAR_FASHION = 10900;</code>
     *
     * <pre>
     **--------------    道具[10900-11000]	--------------
     * </pre>
     */
    public static final int REQ_WEAR_FASHION_VALUE = 10900;
    /**
     * <code>RES_WEAR_FASHION = 10901;</code>
     *
     * <pre>
     *返回穿戴时装
     * </pre>
     */
    public static final int RES_WEAR_FASHION_VALUE = 10901;
    /**
     * <code>REQ_DISCARD_FASHION = 10902;</code>
     *
     * <pre>
     *请求卸下时装
     * </pre>
     */
    public static final int REQ_DISCARD_FASHION_VALUE = 10902;
    /**
     * <code>RES_DISCARD_FASHION = 10903;</code>
     *
     * <pre>
     *返回卸下时装
     * </pre>
     */
    public static final int RES_DISCARD_FASHION_VALUE = 10903;
    /**
     * <code>RES_EQUIP_SLOT = 10904;</code>
     *
     * <pre>
     *返回装备列表
     * </pre>
     */
    public static final int RES_EQUIP_SLOT_VALUE = 10904;
    /**
     * <code>REQ_WATCH_OTHER_EQUIP_SLOT = 10905;</code>
     *
     * <pre>
     *请求察看其他玩家的装备列表
     * </pre>
     */
    public static final int REQ_WATCH_OTHER_EQUIP_SLOT_VALUE = 10905;
    /**
     * <code>REQ_STRENGTH_EQUIP = 10906;</code>
     *
     * <pre>
     *请求强化装备
     * </pre>
     */
    public static final int REQ_STRENGTH_EQUIP_VALUE = 10906;
    /**
     * <code>RES_STRENGTH_EQUIP = 10907;</code>
     *
     * <pre>
     *返回强化装备
     * </pre>
     */
    public static final int RES_STRENGTH_EQUIP_VALUE = 10907;
    /**
     * <code>REQ_STRENGTH_EQUIP_INFO = 10908;</code>
     *
     * <pre>
     *请求强化装备信息
     * </pre>
     */
    public static final int REQ_STRENGTH_EQUIP_INFO_VALUE = 10908;
    /**
     * <code>RES_STRENGTH_EQUIP_INFO = 10909;</code>
     *
     * <pre>
     *请求强化装备信息
     * </pre>
     */
    public static final int RES_STRENGTH_EQUIP_INFO_VALUE = 10909;
    /**
     * <code>REQ_COMPOUND_EQUIP = 10910;</code>
     *
     * <pre>
     *请求合成装备
     * </pre>
     */
    public static final int REQ_COMPOUND_EQUIP_VALUE = 10910;
    /**
     * <code>RES_COMPOUND_EQUIP = 10911;</code>
     *
     * <pre>
     *返回合成装备结果
     * </pre>
     */
    public static final int RES_COMPOUND_EQUIP_VALUE = 10911;
    /**
     * <code>REQ_COMPOUND_MATERIAL = 10912;</code>
     *
     * <pre>
     *请求合成材料
     * </pre>
     */
    public static final int REQ_COMPOUND_MATERIAL_VALUE = 10912;
    /**
     * <code>RES_COMPOUND_MATERIAL = 10913;</code>
     *
     * <pre>
     *返回合成材料结果
     * </pre>
     */
    public static final int RES_COMPOUND_MATERIAL_VALUE = 10913;
    /**
     * <code>REQ_POLISH_EQUIP = 10914;</code>
     *
     * <pre>
     *请求洗练装备
     * </pre>
     */
    public static final int REQ_POLISH_EQUIP_VALUE = 10914;
    /**
     * <code>RES_POLISH_EQUIP = 10915;</code>
     *
     * <pre>
     *返回洗练装备
     * </pre>
     */
    public static final int RES_POLISH_EQUIP_VALUE = 10915;
    /**
     * <code>REQ_USE_ITEM = 10918;</code>
     *
     * <pre>
     *请求使用道具
     * </pre>
     */
    public static final int REQ_USE_ITEM_VALUE = 10918;
    /**
     * <code>RES_USE_ITEM = 10919;</code>
     *
     * <pre>
     *返回使用道具
     * </pre>
     */
    public static final int RES_USE_ITEM_VALUE = 10919;
    /**
     * <code>REQ_ADD_MISSION = 11001;</code>
     *
     * <pre>
     **--------------    任务[11001-11100]	--------------
     * </pre>
     */
    public static final int REQ_ADD_MISSION_VALUE = 11001;
    /**
     * <code>RES_ADD_MISSION = 11002;</code>
     *
     * <pre>
     *返回接任务消息
     * </pre>
     */
    public static final int RES_ADD_MISSION_VALUE = 11002;
    /**
     * <code>REQ_GIVE_UP_MISSION = 11003;</code>
     *
     * <pre>
     *请求放弃任务
     * </pre>
     */
    public static final int REQ_GIVE_UP_MISSION_VALUE = 11003;
    /**
     * <code>RES_GIVE_UP_MISSION_INFO = 11004;</code>
     *
     * <pre>
     *放弃任务返回结果
     * </pre>
     */
    public static final int RES_GIVE_UP_MISSION_INFO_VALUE = 11004;
    /**
     * <code>RES_ALL_MISSION_LIST = 11005;</code>
     *
     * <pre>
     *玩家所有任务信息
     * </pre>
     */
    public static final int RES_ALL_MISSION_LIST_VALUE = 11005;
    /**
     * <code>RES_ON_KILL = 11006;</code>
     *
     * <pre>
     *击杀任务信息
     * </pre>
     */
    public static final int RES_ON_KILL_VALUE = 11006;
    /**
     * <code>REQ_ACCCEPT_REWARD = 11007;</code>
     *
     * <pre>
     *领取奖励
     * </pre>
     */
    public static final int REQ_ACCCEPT_REWARD_VALUE = 11007;
    /**
     * <code>RES_ACCCEPT_REWARD = 11008;</code>
     *
     * <pre>
     *返回领取奖励
     * </pre>
     */
    public static final int RES_ACCCEPT_REWARD_VALUE = 11008;
    /**
     * <code>REQ_OPEN_HOLESITE = 11101;</code>
     *
     * <pre>
     *请求开启孔位
     * </pre>
     */
    public static final int REQ_OPEN_HOLESITE_VALUE = 11101;
    /**
     * <code>RES_OPEN_HOLESITE = 11102;</code>
     *
     * <pre>
     *返回开启
     * </pre>
     */
    public static final int RES_OPEN_HOLESITE_VALUE = 11102;
    /**
     * <code>REQ_INLAY_HOLESITE = 11103;</code>
     *
     * <pre>
     *请求镶嵌
     * </pre>
     */
    public static final int REQ_INLAY_HOLESITE_VALUE = 11103;
    /**
     * <code>RES_INLAY_HOLESITE = 11104;</code>
     *
     * <pre>
     *返回镶嵌
     * </pre>
     */
    public static final int RES_INLAY_HOLESITE_VALUE = 11104;
    /**
     * <code>REQ_REPLACE_HOLESITE = 11105;</code>
     *
     * <pre>
     *请求更换
     * </pre>
     */
    public static final int REQ_REPLACE_HOLESITE_VALUE = 11105;
    /**
     * <code>RES_REPLACE_HOLESITE = 11106;</code>
     *
     * <pre>
     *返回更换
     * </pre>
     */
    public static final int RES_REPLACE_HOLESITE_VALUE = 11106;
    /**
     * <code>REQ_LOGIC_LOGIN = 20000;</code>
     *
     * <pre>
     **-------------	地图[20000 - 20099]	-------------
     * </pre>
     */
    public static final int REQ_LOGIC_LOGIN_VALUE = 20000;
    /**
     * <code>RES_LOGIC_LOGIN = 20001;</code>
     *
     * <pre>
     *登录逻辑服返回	
     * </pre>
     */
    public static final int RES_LOGIC_LOGIN_VALUE = 20001;
    /**
     * <code>REQ_GET_MAP_INITINFO = 20002;</code>
     *
     * <pre>
     *客户端获取地图初始信息
     * </pre>
     */
    public static final int REQ_GET_MAP_INITINFO_VALUE = 20002;
    /**
     * <code>RES_GET_MAP_INITINFO = 20003;</code>
     *
     * <pre>
     *服务器返回地图初始化信息
     * </pre>
     */
    public static final int RES_GET_MAP_INITINFO_VALUE = 20003;
    /**
     * <code>REQ_MAP_ENTER = 20004;</code>
     *
     * <pre>
     *客户端加载结束后，请求进入地图
     * </pre>
     */
    public static final int REQ_MAP_ENTER_VALUE = 20004;
    /**
     * <code>RES_MAP_ENTER = 20005;</code>
     *
     * <pre>
     *客户端加载结束后，请求进入地图的返回
     * </pre>
     */
    public static final int RES_MAP_ENTER_VALUE = 20005;
    /**
     * <code>RES_MAP_BEGIN = 20006;</code>
     *
     * <pre>
     *副本开始
     * </pre>
     */
    public static final int RES_MAP_BEGIN_VALUE = 20006;
    /**
     * <code>RES_MAP_ROLE_CON_CHANGE = 20007;</code>
     *
     * <pre>
     *地图中玩家角色在线状态改变
     * </pre>
     */
    public static final int RES_MAP_ROLE_CON_CHANGE_VALUE = 20007;
    /**
     * <code>REQ_MAP_EXIT = 20008;</code>
     *
     * <pre>
     *主动请求退出地图
     * </pre>
     */
    public static final int REQ_MAP_EXIT_VALUE = 20008;
    /**
     * <code>RES_MAP_EXIT = 20009;</code>
     *
     * <pre>
     *角色退出地图
     * </pre>
     */
    public static final int RES_MAP_EXIT_VALUE = 20009;
    /**
     * <code>REQ_MAP_ON_EVENT = 20010;</code>
     *
     * <pre>
     *客户端触发地图事件
     * </pre>
     */
    public static final int REQ_MAP_ON_EVENT_VALUE = 20010;
    /**
     * <code>RES_MAP_ON_EVENT = 20011;</code>
     *
     * <pre>
     *服务器触发地图事件
     * </pre>
     */
    public static final int RES_MAP_ON_EVENT_VALUE = 20011;
    /**
     * <code>REQ_MAP_STOP_MOVE = 20018;</code>
     *
     * <pre>
     *单位停止移动
     * </pre>
     */
    public static final int REQ_MAP_STOP_MOVE_VALUE = 20018;
    /**
     * <code>RES_MAP_BROADCAST_STOP = 20019;</code>
     *
     * <pre>
     *广播单位停止移动
     * </pre>
     */
    public static final int RES_MAP_BROADCAST_STOP_VALUE = 20019;
    /**
     * <code>REQ_MAP_ROLE_MOVE = 20020;</code>
     *
     * <pre>
     *角色移动信息提交
     * </pre>
     */
    public static final int REQ_MAP_ROLE_MOVE_VALUE = 20020;
    /**
     * <code>RES_MAP_BROADCAST_MOVE = 20021;</code>
     *
     * <pre>
     *广播地图移动消息
     * </pre>
     */
    public static final int RES_MAP_BROADCAST_MOVE_VALUE = 20021;
    /**
     * <code>RES_MAP_BROADCAST_NEW = 20022;</code>
     *
     * <pre>
     *广播新单位出现
     * </pre>
     */
    public static final int RES_MAP_BROADCAST_NEW_VALUE = 20022;
    /**
     * <code>RES_MAP_BROADCAST_REMOVE = 20023;</code>
     *
     * <pre>
     *广播单位移除
     * </pre>
     */
    public static final int RES_MAP_BROADCAST_REMOVE_VALUE = 20023;
    /**
     * <code>REQ_MAP_ROLE_REBORN = 20024;</code>
     *
     * <pre>
     *请求地图单位复活
     * </pre>
     */
    public static final int REQ_MAP_ROLE_REBORN_VALUE = 20024;
    /**
     * <code>RES_MAP_ROLE_REBORN = 20025;</code>
     *
     * <pre>
     *返回地图单位复活
     * </pre>
     */
    public static final int RES_MAP_ROLE_REBORN_VALUE = 20025;
    /**
     * <code>RES_MAP_UNIT_HP_CHANGE = 20027;</code>
     *
     * <pre>
     *广播地图单位血量变化
     * </pre>
     */
    public static final int RES_MAP_UNIT_HP_CHANGE_VALUE = 20027;
    /**
     * <code>RES_BROAD_REBORN_STATUES = 20028;</code>
     *
     * <pre>
     *广播地图单位复活
     * </pre>
     */
    public static final int RES_BROAD_REBORN_STATUES_VALUE = 20028;
    /**
     * <code>RES_MAP_UNIT_MP_CHANGE = 20029;</code>
     *
     * <pre>
     *广播MP变化
     * </pre>
     */
    public static final int RES_MAP_UNIT_MP_CHANGE_VALUE = 20029;
    /**
     * <code>RES_MAP_UNIT_DEATH = 20030;</code>
     *
     * <pre>
     *广播单位死亡
     * </pre>
     */
    public static final int RES_MAP_UNIT_DEATH_VALUE = 20030;
    /**
     * <code>RES_UNIT_FURY_CHANGE = 20031;</code>
     *
     * <pre>
     *广播怒气变化
     * </pre>
     */
    public static final int RES_UNIT_FURY_CHANGE_VALUE = 20031;
    /**
     * <code>RES_MAP_DROPITEM = 20040;</code>
     *
     * <pre>
     *掉落物品
     * </pre>
     */
    public static final int RES_MAP_DROPITEM_VALUE = 20040;
    /**
     * <code>RES_BUFF_ADD = 20201;</code>
     *
     * <pre>
     *增加buff
     * </pre>
     */
    public static final int RES_BUFF_ADD_VALUE = 20201;
    /**
     * <code>RES_BUFF_REMOVE = 20202;</code>
     *
     * <pre>
     *buff移除
     * </pre>
     */
    public static final int RES_BUFF_REMOVE_VALUE = 20202;
    /**
     * <code>RES_BUFF_UPDATE = 20203;</code>
     *
     * <pre>
     *buff更新
     * </pre>
     */
    public static final int RES_BUFF_UPDATE_VALUE = 20203;
    /**
     * <code>RES_WHISPER_SKILL_A = 20211;</code>
     *
     * <pre>
     *青羽寨技能A
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_VALUE = 20211;
    /**
     * <code>RES_WHISPER_SKILL_A_A = 20212;</code>
     *
     * <pre>
     *青羽寨技能AA
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_A_VALUE = 20212;
    /**
     * <code>RES_WHISPER_SKILL_A_A_A = 20213;</code>
     *
     * <pre>
     *青羽寨技能AAA
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_A_A_VALUE = 20213;
    /**
     * <code>RES_WHISPER_SKILL_A_A_C = 20214;</code>
     *
     * <pre>
     *青羽寨技能AAC
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_A_C_VALUE = 20214;
    /**
     * <code>RES_WHISPER_SKILL_A_B = 20215;</code>
     *
     * <pre>
     *青羽寨技能AB
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_B_VALUE = 20215;
    /**
     * <code>RES_WHISPER_SKILL_A_B_C = 20216;</code>
     *
     * <pre>
     *青羽寨技能ABC
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_B_C_VALUE = 20216;
    /**
     * <code>RES_WHISPER_SKILL_A_C = 20217;</code>
     *
     * <pre>
     *青羽寨技能AC
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_A_C_VALUE = 20217;
    /**
     * <code>RES_WHISPER_SKILL_B = 20218;</code>
     *
     * <pre>
     *青羽寨技能B
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_VALUE = 20218;
    /**
     * <code>RES_WHISPER_SKILL_B_A = 20219;</code>
     *
     * <pre>
     *青羽寨技能BA
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_A_VALUE = 20219;
    /**
     * <code>RES_WHISPER_SKILL_B_A_C = 20220;</code>
     *
     * <pre>
     *青羽寨技能BAC
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_A_C_VALUE = 20220;
    /**
     * <code>RES_WHISPER_SKILL_B_B = 20221;</code>
     *
     * <pre>
     *青羽寨技能BB
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_B_VALUE = 20221;
    /**
     * <code>RES_WHISPER_SKILL_B_B_B = 20222;</code>
     *
     * <pre>
     *青羽寨技能BBB
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_B_B_VALUE = 20222;
    /**
     * <code>RES_WHISPER_SKILL_B_B_C = 20223;</code>
     *
     * <pre>
     *青羽寨技能BBC
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_B_C_VALUE = 20223;
    /**
     * <code>RES_WHISPER_SKILL_B_C = 20224;</code>
     *
     * <pre>
     *青羽寨技能BC
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_B_C_VALUE = 20224;
    /**
     * <code>RES_WHISPER_SKILL_C = 20225;</code>
     *
     * <pre>
     *青羽寨技能C
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_C_VALUE = 20225;
    /**
     * <code>RES_WHISPER_SKILL_D = 20226;</code>
     *
     * <pre>
     *青羽寨技能D
     * </pre>
     */
    public static final int RES_WHISPER_SKILL_D_VALUE = 20226;
    /**
     * <code>RES_WARRIOR_SKILL_A = 20241;</code>
     *
     * <pre>
     *日月盟技能A
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_VALUE = 20241;
    /**
     * <code>RES_WARRIOR_SKILL_A_A = 20242;</code>
     *
     * <pre>
     *日月盟技能AA
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_A_VALUE = 20242;
    /**
     * <code>RES_WARRIOR_SKILL_A_A_A = 20243;</code>
     *
     * <pre>
     *日月盟技能AAA
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_A_A_VALUE = 20243;
    /**
     * <code>RES_WARRIOR_SKILL_A_A_C = 20244;</code>
     *
     * <pre>
     *日月盟技能AAC
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_A_C_VALUE = 20244;
    /**
     * <code>RES_WARRIOR_SKILL_A_B = 20245;</code>
     *
     * <pre>
     *日月盟技能AB
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_B_VALUE = 20245;
    /**
     * <code>RES_WARRIOR_SKILL_A_B_C = 20246;</code>
     *
     * <pre>
     *日月盟技能ABC
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_B_C_VALUE = 20246;
    /**
     * <code>RES_WARRIOR_SKILL_A_C = 20247;</code>
     *
     * <pre>
     *日月盟技能AC
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_A_C_VALUE = 20247;
    /**
     * <code>RES_WARRIOR_SKILL_B = 20248;</code>
     *
     * <pre>
     *日月盟技能B
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_VALUE = 20248;
    /**
     * <code>RES_WARRIOR_SKILL_B_A = 20249;</code>
     *
     * <pre>
     *日月盟技能BA
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_A_VALUE = 20249;
    /**
     * <code>RES_WARRIOR_SKILL_B_A_C = 20250;</code>
     *
     * <pre>
     *日月盟技能BAC
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_A_C_VALUE = 20250;
    /**
     * <code>RES_WARRIOR_SKILL_B_B = 20251;</code>
     *
     * <pre>
     *日月盟技能BB
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_B_VALUE = 20251;
    /**
     * <code>RES_WARRIOR_SKILL_B_B_B = 20252;</code>
     *
     * <pre>
     *日月盟技能BBB
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_B_B_VALUE = 20252;
    /**
     * <code>RES_WARRIOR_SKILL_B_B_C = 20253;</code>
     *
     * <pre>
     *日月盟技能BBC
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_B_C_VALUE = 20253;
    /**
     * <code>RES_WARRIOR_SKILL_B_C = 20254;</code>
     *
     * <pre>
     *日月盟技能BC
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_B_C_VALUE = 20254;
    /**
     * <code>RES_WARRIOR_SKILL_C = 20255;</code>
     *
     * <pre>
     *日月盟技能C
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_C_VALUE = 20255;
    /**
     * <code>RES_WARRIOR_SKILL_D = 20256;</code>
     *
     * <pre>
     *日月盟技能D
     * </pre>
     */
    public static final int RES_WARRIOR_SKILL_D_VALUE = 20256;
    /**
     * <code>RES_MONSTER_NORMAL_ATTACK_SKILL = 20330;</code>
     *
     * <pre>
     *怪物普通物理攻击
     * </pre>
     */
    public static final int RES_MONSTER_NORMAL_ATTACK_SKILL_VALUE = 20330;
    /**
     * <code>RES_TEST = 20310;</code>
     *
     * <pre>
     *测试消息
     * </pre>
     */
    public static final int RES_TEST_VALUE = 20310;


    public final int getNumber() { return value; }

    public static GameCode valueOf(int value) {
      switch (value) {
        case 9000: return RES_ALERT;
        case 9001: return REQ_HEARTBEAT;
        case 9002: return RES_HEARTBEAT;
        case 10000: return REQ_LOGIN_GLOBAL;
        case 10001: return RES_LOGIN_GLOBAL;
        case 10002: return REQ_ROLE_LIST;
        case 10003: return RES_ROLE_LIST;
        case 10004: return REQ_ROLE_CREATE;
        case 10005: return RES_ROLE_CREATE;
        case 10006: return REQ_ROLE_DELETE;
        case 10007: return RES_ROLE_DELETE;
        case 10008: return REQ_ROLE_ENTER_GAME;
        case 10009: return RES_ROLE_ENTER_GAME;
        case 10010: return RES_ROLE_BASE_INFO;
        case 10011: return RES_ROLE_MAP_INFO;
        case 10020: return RES_ROLE_INIT_OVER;
        case 10021: return REQ_GET_SHOW_ROLE_LISE;
        case 10022: return RES_GET_SHOW_ROLE_LIST;
        case 10031: return REQ_ROLE_ENTER_DUNGEON;
        case 10032: return RES_ROLE_ENTER_DUNGEON;
        case 10033: return RES_ROLE_DUNGEON_BALANCE;
        case 10040: return REQ_ROLE_ENTER_TOWN;
        case 10041: return RES_ROLE_ENTER_TOWN;
        case 10100: return REQ_CHAT_SET;
        case 10101: return RES_CHAT_SET;
        case 10102: return REQ_CHAT_ITEMINFO;
        case 10103: return RES_CHAT_ITEMINFO;
        case 10201: return REQ_MAIL_LIST;
        case 10202: return RES_MAIL_LIST;
        case 10203: return REQ_MAIL_SET_READ;
        case 10204: return RES_MAIL_SET_READ;
        case 10205: return REQ_MAIL_CLAIM;
        case 10206: return RES_MAIL_CLAIM;
        case 10207: return REQ_MAIL_DELETE;
        case 10208: return RES_MAIL_DELETE;
        case 10209: return RES_MAIL_ADD;
        case 10300: return REQ_FAMILY_LIST;
        case 10301: return RES_FAMILY_LIST;
        case 10302: return REQ_FAMILY_CREATE;
        case 10303: return RES_FAMILY_CREAIE;
        case 10304: return REQ_FAMILY_APPLY_IN;
        case 10305: return REQ_FAMILY_CANCEL_APPLY;
        case 10306: return RES_FAMILY_APPLY_CHANGE;
        case 10307: return REQ_FAMILY_HOME_PAGE;
        case 10308: return RES_FAMILY_HOME_PAGE;
        case 10309: return REQ_FAMILY_NOTICE_CAHNGE;
        case 10310: return RES_FAMILY_NOTICE_CHANGE;
        case 10311: return REQ_FAMILY_MEMBER_LIST;
        case 10312: return RES_FAMILY_MEMBER_LIST;
        case 10313: return REQ_FAMILY_APPLY_LIST;
        case 10314: return RES_FAMILY_APPLY_LIST;
        case 10315: return REQ_FAMILY_TRANSFER_SHAIKH;
        case 10316: return REQ_FAMILY_APPOINT_ROLE;
        case 10317: return RES_FAMILY_ROLE_CHANGE;
        case 10318: return REQ_FAMILY_DISPOSE_APPLY;
        case 10319: return RES_FAMILY_DISPOSE_APPLY;
        case 10320: return REQ_FAMILY_KICK_OUT_MEMBER;
        case 10321: return RES_FAMILY_KICK_OUT_MEMBER;
        case 10322: return REQ_FAMILY_EXIT;
        case 10323: return RES_FAMILY_EXIT;
        case 10400: return REQ_SOCIAL_ADD;
        case 10401: return RES_SOCIAL_ADD;
        case 10402: return REQ_SOCIAL_DELETE;
        case 10403: return RES_SOCIAL_DELETE;
        case 10404: return REQ_SOCIAL_LIST;
        case 10405: return RES_SOCIAL_LIST;
        case 10500: return RES_ROLE_LEVEL_CHANGE;
        case 10501: return RES_ROLE_EXP_CHANGE;
        case 10502: return RES_ROLE_CURRENCY_CHANGE;
        case 100503: return REQ_ROLE_ENERGY_ADDING;
        case 100504: return RES_ROLE_ENERGY_ADDING;
        case 10700: return RES_BACKPACKITEM_LIST;
        case 10701: return RES_BACKPACKITEM_DELETE;
        case 10702: return RES_BACKPACKITEM_ADD;
        case 10703: return RES_BACKPACKITEM_NUM_CHANGE;
        case 10704: return REQ_BACKPACK_OPEN_CELL;
        case 10705: return RES_BACKCELL_NUM;
        case 10800: return REQ_SHOPITEM_LIST;
        case 10801: return RES_SHOPITEM_LIST;
        case 10802: return REQ_SHOPITEM_BUY;
        case 10803: return RES_SHOPITEM_BUY;
        case 10804: return REQ_SHOPITEM_SELL;
        case 10805: return RES_SHOPITEM_SELL;
        case 10806: return REQ_MYSTERYSHOPITEM_LIST;
        case 10807: return RES_MYSTERYSHOPITEM_LIST;
        case 10808: return REQ_MYSTERYSHOPITEM_BUY;
        case 10809: return RES_MYSTERYSHOPITEM_BUY;
        case 10810: return REQ_MYSTERYSHOP_REFURBISH;
        case 10811: return RES_MYSTERYSHOP_REFURBISH;
        case 10900: return REQ_WEAR_FASHION;
        case 10901: return RES_WEAR_FASHION;
        case 10902: return REQ_DISCARD_FASHION;
        case 10903: return RES_DISCARD_FASHION;
        case 10904: return RES_EQUIP_SLOT;
        case 10905: return REQ_WATCH_OTHER_EQUIP_SLOT;
        case 10906: return REQ_STRENGTH_EQUIP;
        case 10907: return RES_STRENGTH_EQUIP;
        case 10908: return REQ_STRENGTH_EQUIP_INFO;
        case 10909: return RES_STRENGTH_EQUIP_INFO;
        case 10910: return REQ_COMPOUND_EQUIP;
        case 10911: return RES_COMPOUND_EQUIP;
        case 10912: return REQ_COMPOUND_MATERIAL;
        case 10913: return RES_COMPOUND_MATERIAL;
        case 10914: return REQ_POLISH_EQUIP;
        case 10915: return RES_POLISH_EQUIP;
        case 10918: return REQ_USE_ITEM;
        case 10919: return RES_USE_ITEM;
        case 11001: return REQ_ADD_MISSION;
        case 11002: return RES_ADD_MISSION;
        case 11003: return REQ_GIVE_UP_MISSION;
        case 11004: return RES_GIVE_UP_MISSION_INFO;
        case 11005: return RES_ALL_MISSION_LIST;
        case 11006: return RES_ON_KILL;
        case 11007: return REQ_ACCCEPT_REWARD;
        case 11008: return RES_ACCCEPT_REWARD;
        case 11101: return REQ_OPEN_HOLESITE;
        case 11102: return RES_OPEN_HOLESITE;
        case 11103: return REQ_INLAY_HOLESITE;
        case 11104: return RES_INLAY_HOLESITE;
        case 11105: return REQ_REPLACE_HOLESITE;
        case 11106: return RES_REPLACE_HOLESITE;
        case 20000: return REQ_LOGIC_LOGIN;
        case 20001: return RES_LOGIC_LOGIN;
        case 20002: return REQ_GET_MAP_INITINFO;
        case 20003: return RES_GET_MAP_INITINFO;
        case 20004: return REQ_MAP_ENTER;
        case 20005: return RES_MAP_ENTER;
        case 20006: return RES_MAP_BEGIN;
        case 20007: return RES_MAP_ROLE_CON_CHANGE;
        case 20008: return REQ_MAP_EXIT;
        case 20009: return RES_MAP_EXIT;
        case 20010: return REQ_MAP_ON_EVENT;
        case 20011: return RES_MAP_ON_EVENT;
        case 20018: return REQ_MAP_STOP_MOVE;
        case 20019: return RES_MAP_BROADCAST_STOP;
        case 20020: return REQ_MAP_ROLE_MOVE;
        case 20021: return RES_MAP_BROADCAST_MOVE;
        case 20022: return RES_MAP_BROADCAST_NEW;
        case 20023: return RES_MAP_BROADCAST_REMOVE;
        case 20024: return REQ_MAP_ROLE_REBORN;
        case 20025: return RES_MAP_ROLE_REBORN;
        case 20027: return RES_MAP_UNIT_HP_CHANGE;
        case 20028: return RES_BROAD_REBORN_STATUES;
        case 20029: return RES_MAP_UNIT_MP_CHANGE;
        case 20030: return RES_MAP_UNIT_DEATH;
        case 20031: return RES_UNIT_FURY_CHANGE;
        case 20040: return RES_MAP_DROPITEM;
        case 20201: return RES_BUFF_ADD;
        case 20202: return RES_BUFF_REMOVE;
        case 20203: return RES_BUFF_UPDATE;
        case 20211: return RES_WHISPER_SKILL_A;
        case 20212: return RES_WHISPER_SKILL_A_A;
        case 20213: return RES_WHISPER_SKILL_A_A_A;
        case 20214: return RES_WHISPER_SKILL_A_A_C;
        case 20215: return RES_WHISPER_SKILL_A_B;
        case 20216: return RES_WHISPER_SKILL_A_B_C;
        case 20217: return RES_WHISPER_SKILL_A_C;
        case 20218: return RES_WHISPER_SKILL_B;
        case 20219: return RES_WHISPER_SKILL_B_A;
        case 20220: return RES_WHISPER_SKILL_B_A_C;
        case 20221: return RES_WHISPER_SKILL_B_B;
        case 20222: return RES_WHISPER_SKILL_B_B_B;
        case 20223: return RES_WHISPER_SKILL_B_B_C;
        case 20224: return RES_WHISPER_SKILL_B_C;
        case 20225: return RES_WHISPER_SKILL_C;
        case 20226: return RES_WHISPER_SKILL_D;
        case 20241: return RES_WARRIOR_SKILL_A;
        case 20242: return RES_WARRIOR_SKILL_A_A;
        case 20243: return RES_WARRIOR_SKILL_A_A_A;
        case 20244: return RES_WARRIOR_SKILL_A_A_C;
        case 20245: return RES_WARRIOR_SKILL_A_B;
        case 20246: return RES_WARRIOR_SKILL_A_B_C;
        case 20247: return RES_WARRIOR_SKILL_A_C;
        case 20248: return RES_WARRIOR_SKILL_B;
        case 20249: return RES_WARRIOR_SKILL_B_A;
        case 20250: return RES_WARRIOR_SKILL_B_A_C;
        case 20251: return RES_WARRIOR_SKILL_B_B;
        case 20252: return RES_WARRIOR_SKILL_B_B_B;
        case 20253: return RES_WARRIOR_SKILL_B_B_C;
        case 20254: return RES_WARRIOR_SKILL_B_C;
        case 20255: return RES_WARRIOR_SKILL_C;
        case 20256: return RES_WARRIOR_SKILL_D;
        case 20330: return RES_MONSTER_NORMAL_ATTACK_SKILL;
        case 20310: return RES_TEST;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameCode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameCode>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameCode>() {
            public GameCode findValueByNumber(int number) {
              return GameCode.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgCode.getDescriptor().getEnumTypes().get(0);
    }

    private static final GameCode[] VALUES = values();

    public static GameCode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GameCode(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.GameCode)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMsgCode.proto\022\023ProtoNetWorkMessage*\336%\n" +
      "\010GameCode\022\016\n\tRES_ALERT\020\250F\022\022\n\rREQ_HEARTBE" +
      "AT\020\251F\022\022\n\rRES_HEARTBEAT\020\252F\022\025\n\020REQ_LOGIN_G" +
      "LOBAL\020\220N\022\025\n\020RES_LOGIN_GLOBAL\020\221N\022\022\n\rREQ_R" +
      "OLE_LIST\020\222N\022\022\n\rRES_ROLE_LIST\020\223N\022\024\n\017REQ_R" +
      "OLE_CREATE\020\224N\022\024\n\017RES_ROLE_CREATE\020\225N\022\024\n\017R" +
      "EQ_ROLE_DELETE\020\226N\022\024\n\017RES_ROLE_DELETE\020\227N\022" +
      "\030\n\023REQ_ROLE_ENTER_GAME\020\230N\022\030\n\023RES_ROLE_EN" +
      "TER_GAME\020\231N\022\027\n\022RES_ROLE_BASE_INFO\020\232N\022\026\n\021" +
      "RES_ROLE_MAP_INFO\020\233N\022\027\n\022RES_ROLE_INIT_OV",
      "ER\020\244N\022\033\n\026REQ_GET_SHOW_ROLE_LISE\020\245N\022\033\n\026RE" +
      "S_GET_SHOW_ROLE_LIST\020\246N\022\033\n\026REQ_ROLE_ENTE" +
      "R_DUNGEON\020\257N\022\033\n\026RES_ROLE_ENTER_DUNGEON\020\260" +
      "N\022\035\n\030RES_ROLE_DUNGEON_BALANCE\020\261N\022\030\n\023REQ_" +
      "ROLE_ENTER_TOWN\020\270N\022\030\n\023RES_ROLE_ENTER_TOW" +
      "N\020\271N\022\021\n\014REQ_CHAT_SET\020\364N\022\021\n\014RES_CHAT_SET\020" +
      "\365N\022\026\n\021REQ_CHAT_ITEMINFO\020\366N\022\026\n\021RES_CHAT_I" +
      "TEMINFO\020\367N\022\022\n\rREQ_MAIL_LIST\020\331O\022\022\n\rRES_MA" +
      "IL_LIST\020\332O\022\026\n\021REQ_MAIL_SET_READ\020\333O\022\026\n\021RE" +
      "S_MAIL_SET_READ\020\334O\022\023\n\016REQ_MAIL_CLAIM\020\335O\022",
      "\023\n\016RES_MAIL_CLAIM\020\336O\022\024\n\017REQ_MAIL_DELETE\020" +
      "\337O\022\024\n\017RES_MAIL_DELETE\020\340O\022\021\n\014RES_MAIL_ADD" +
      "\020\341O\022\024\n\017REQ_FAMILY_LIST\020\274P\022\024\n\017RES_FAMILY_" +
      "LIST\020\275P\022\026\n\021REQ_FAMILY_CREATE\020\276P\022\026\n\021RES_F" +
      "AMILY_CREAIE\020\277P\022\030\n\023REQ_FAMILY_APPLY_IN\020\300" +
      "P\022\034\n\027REQ_FAMILY_CANCEL_APPLY\020\301P\022\034\n\027RES_F" +
      "AMILY_APPLY_CHANGE\020\302P\022\031\n\024REQ_FAMILY_HOME" +
      "_PAGE\020\303P\022\031\n\024RES_FAMILY_HOME_PAGE\020\304P\022\035\n\030R" +
      "EQ_FAMILY_NOTICE_CAHNGE\020\305P\022\035\n\030RES_FAMILY" +
      "_NOTICE_CHANGE\020\306P\022\033\n\026REQ_FAMILY_MEMBER_L",
      "IST\020\307P\022\033\n\026RES_FAMILY_MEMBER_LIST\020\310P\022\032\n\025R" +
      "EQ_FAMILY_APPLY_LIST\020\311P\022\032\n\025RES_FAMILY_AP" +
      "PLY_LIST\020\312P\022\037\n\032REQ_FAMILY_TRANSFER_SHAIK" +
      "H\020\313P\022\034\n\027REQ_FAMILY_APPOINT_ROLE\020\314P\022\033\n\026RE" +
      "S_FAMILY_ROLE_CHANGE\020\315P\022\035\n\030REQ_FAMILY_DI" +
      "SPOSE_APPLY\020\316P\022\035\n\030RES_FAMILY_DISPOSE_APP" +
      "LY\020\317P\022\037\n\032REQ_FAMILY_KICK_OUT_MEMBER\020\320P\022\037" +
      "\n\032RES_FAMILY_KICK_OUT_MEMBER\020\321P\022\024\n\017REQ_F" +
      "AMILY_EXIT\020\322P\022\024\n\017RES_FAMILY_EXIT\020\323P\022\023\n\016R" +
      "EQ_SOCIAL_ADD\020\240Q\022\023\n\016RES_SOCIAL_ADD\020\241Q\022\026\n",
      "\021REQ_SOCIAL_DELETE\020\242Q\022\026\n\021RES_SOCIAL_DELE" +
      "TE\020\243Q\022\024\n\017REQ_SOCIAL_LIST\020\244Q\022\024\n\017RES_SOCIA" +
      "L_LIST\020\245Q\022\032\n\025RES_ROLE_LEVEL_CHANGE\020\204R\022\030\n" +
      "\023RES_ROLE_EXP_CHANGE\020\205R\022\035\n\030RES_ROLE_CURR" +
      "ENCY_CHANGE\020\206R\022\034\n\026REQ_ROLE_ENERGY_ADDING" +
      "\020\227\221\006\022\034\n\026RES_ROLE_ENERGY_ADDING\020\230\221\006\022\032\n\025RE" +
      "S_BACKPACKITEM_LIST\020\314S\022\034\n\027RES_BACKPACKIT" +
      "EM_DELETE\020\315S\022\031\n\024RES_BACKPACKITEM_ADD\020\316S\022" +
      " \n\033RES_BACKPACKITEM_NUM_CHANGE\020\317S\022\033\n\026REQ" +
      "_BACKPACK_OPEN_CELL\020\320S\022\025\n\020RES_BACKCELL_N",
      "UM\020\321S\022\026\n\021REQ_SHOPITEM_LIST\020\260T\022\026\n\021RES_SHO" +
      "PITEM_LIST\020\261T\022\025\n\020REQ_SHOPITEM_BUY\020\262T\022\025\n\020" +
      "RES_SHOPITEM_BUY\020\263T\022\026\n\021REQ_SHOPITEM_SELL" +
      "\020\264T\022\026\n\021RES_SHOPITEM_SELL\020\265T\022\035\n\030REQ_MYSTE" +
      "RYSHOPITEM_LIST\020\266T\022\035\n\030RES_MYSTERYSHOPITE" +
      "M_LIST\020\267T\022\034\n\027REQ_MYSTERYSHOPITEM_BUY\020\270T\022" +
      "\034\n\027RES_MYSTERYSHOPITEM_BUY\020\271T\022\036\n\031REQ_MYS" +
      "TERYSHOP_REFURBISH\020\272T\022\036\n\031RES_MYSTERYSHOP" +
      "_REFURBISH\020\273T\022\025\n\020REQ_WEAR_FASHION\020\224U\022\025\n\020" +
      "RES_WEAR_FASHION\020\225U\022\030\n\023REQ_DISCARD_FASHI",
      "ON\020\226U\022\030\n\023RES_DISCARD_FASHION\020\227U\022\023\n\016RES_E" +
      "QUIP_SLOT\020\230U\022\037\n\032REQ_WATCH_OTHER_EQUIP_SL" +
      "OT\020\231U\022\027\n\022REQ_STRENGTH_EQUIP\020\232U\022\027\n\022RES_ST" +
      "RENGTH_EQUIP\020\233U\022\034\n\027REQ_STRENGTH_EQUIP_IN" +
      "FO\020\234U\022\034\n\027RES_STRENGTH_EQUIP_INFO\020\235U\022\027\n\022R" +
      "EQ_COMPOUND_EQUIP\020\236U\022\027\n\022RES_COMPOUND_EQU" +
      "IP\020\237U\022\032\n\025REQ_COMPOUND_MATERIAL\020\240U\022\032\n\025RES" +
      "_COMPOUND_MATERIAL\020\241U\022\025\n\020REQ_POLISH_EQUI" +
      "P\020\242U\022\025\n\020RES_POLISH_EQUIP\020\243U\022\021\n\014REQ_USE_I" +
      "TEM\020\246U\022\021\n\014RES_USE_ITEM\020\247U\022\024\n\017REQ_ADD_MIS",
      "SION\020\371U\022\024\n\017RES_ADD_MISSION\020\372U\022\030\n\023REQ_GIV" +
      "E_UP_MISSION\020\373U\022\035\n\030RES_GIVE_UP_MISSION_I" +
      "NFO\020\374U\022\031\n\024RES_ALL_MISSION_LIST\020\375U\022\020\n\013RES" +
      "_ON_KILL\020\376U\022\027\n\022REQ_ACCCEPT_REWARD\020\377U\022\027\n\022" +
      "RES_ACCCEPT_REWARD\020\200V\022\026\n\021REQ_OPEN_HOLESI" +
      "TE\020\335V\022\026\n\021RES_OPEN_HOLESITE\020\336V\022\027\n\022REQ_INL" +
      "AY_HOLESITE\020\337V\022\027\n\022RES_INLAY_HOLESITE\020\340V\022" +
      "\031\n\024REQ_REPLACE_HOLESITE\020\341V\022\031\n\024RES_REPLAC" +
      "E_HOLESITE\020\342V\022\025\n\017REQ_LOGIC_LOGIN\020\240\234\001\022\025\n\017" +
      "RES_LOGIC_LOGIN\020\241\234\001\022\032\n\024REQ_GET_MAP_INITI",
      "NFO\020\242\234\001\022\032\n\024RES_GET_MAP_INITINFO\020\243\234\001\022\023\n\rR" +
      "EQ_MAP_ENTER\020\244\234\001\022\023\n\rRES_MAP_ENTER\020\245\234\001\022\023\n" +
      "\rRES_MAP_BEGIN\020\246\234\001\022\035\n\027RES_MAP_ROLE_CON_C" +
      "HANGE\020\247\234\001\022\022\n\014REQ_MAP_EXIT\020\250\234\001\022\022\n\014RES_MAP" +
      "_EXIT\020\251\234\001\022\026\n\020REQ_MAP_ON_EVENT\020\252\234\001\022\026\n\020RES" +
      "_MAP_ON_EVENT\020\253\234\001\022\027\n\021REQ_MAP_STOP_MOVE\020\262" +
      "\234\001\022\034\n\026RES_MAP_BROADCAST_STOP\020\263\234\001\022\027\n\021REQ_" +
      "MAP_ROLE_MOVE\020\264\234\001\022\034\n\026RES_MAP_BROADCAST_M" +
      "OVE\020\265\234\001\022\033\n\025RES_MAP_BROADCAST_NEW\020\266\234\001\022\036\n\030" +
      "RES_MAP_BROADCAST_REMOVE\020\267\234\001\022\031\n\023REQ_MAP_",
      "ROLE_REBORN\020\270\234\001\022\031\n\023RES_MAP_ROLE_REBORN\020\271" +
      "\234\001\022\034\n\026RES_MAP_UNIT_HP_CHANGE\020\273\234\001\022\036\n\030RES_" +
      "BROAD_REBORN_STATUES\020\274\234\001\022\034\n\026RES_MAP_UNIT" +
      "_MP_CHANGE\020\275\234\001\022\030\n\022RES_MAP_UNIT_DEATH\020\276\234\001" +
      "\022\032\n\024RES_UNIT_FURY_CHANGE\020\277\234\001\022\026\n\020RES_MAP_" +
      "DROPITEM\020\310\234\001\022\022\n\014RES_BUFF_ADD\020\351\235\001\022\025\n\017RES_" +
      "BUFF_REMOVE\020\352\235\001\022\025\n\017RES_BUFF_UPDATE\020\353\235\001\022\031" +
      "\n\023RES_WHISPER_SKILL_A\020\363\235\001\022\033\n\025RES_WHISPER" +
      "_SKILL_A_A\020\364\235\001\022\035\n\027RES_WHISPER_SKILL_A_A_" +
      "A\020\365\235\001\022\035\n\027RES_WHISPER_SKILL_A_A_C\020\366\235\001\022\033\n\025",
      "RES_WHISPER_SKILL_A_B\020\367\235\001\022\035\n\027RES_WHISPER" +
      "_SKILL_A_B_C\020\370\235\001\022\033\n\025RES_WHISPER_SKILL_A_" +
      "C\020\371\235\001\022\031\n\023RES_WHISPER_SKILL_B\020\372\235\001\022\033\n\025RES_" +
      "WHISPER_SKILL_B_A\020\373\235\001\022\035\n\027RES_WHISPER_SKI" +
      "LL_B_A_C\020\374\235\001\022\033\n\025RES_WHISPER_SKILL_B_B\020\375\235" +
      "\001\022\035\n\027RES_WHISPER_SKILL_B_B_B\020\376\235\001\022\035\n\027RES_" +
      "WHISPER_SKILL_B_B_C\020\377\235\001\022\033\n\025RES_WHISPER_S" +
      "KILL_B_C\020\200\236\001\022\031\n\023RES_WHISPER_SKILL_C\020\201\236\001\022" +
      "\031\n\023RES_WHISPER_SKILL_D\020\202\236\001\022\031\n\023RES_WARRIO" +
      "R_SKILL_A\020\221\236\001\022\033\n\025RES_WARRIOR_SKILL_A_A\020\222",
      "\236\001\022\035\n\027RES_WARRIOR_SKILL_A_A_A\020\223\236\001\022\035\n\027RES" +
      "_WARRIOR_SKILL_A_A_C\020\224\236\001\022\033\n\025RES_WARRIOR_" +
      "SKILL_A_B\020\225\236\001\022\035\n\027RES_WARRIOR_SKILL_A_B_C" +
      "\020\226\236\001\022\033\n\025RES_WARRIOR_SKILL_A_C\020\227\236\001\022\031\n\023RES" +
      "_WARRIOR_SKILL_B\020\230\236\001\022\033\n\025RES_WARRIOR_SKIL" +
      "L_B_A\020\231\236\001\022\035\n\027RES_WARRIOR_SKILL_B_A_C\020\232\236\001" +
      "\022\033\n\025RES_WARRIOR_SKILL_B_B\020\233\236\001\022\035\n\027RES_WAR" +
      "RIOR_SKILL_B_B_B\020\234\236\001\022\035\n\027RES_WARRIOR_SKIL" +
      "L_B_B_C\020\235\236\001\022\033\n\025RES_WARRIOR_SKILL_B_C\020\236\236\001" +
      "\022\031\n\023RES_WARRIOR_SKILL_C\020\237\236\001\022\031\n\023RES_WARRI",
      "OR_SKILL_D\020\240\236\001\022%\n\037RES_MONSTER_NORMAL_ATT" +
      "ACK_SKILL\020\352\236\001\022\016\n\010RES_TEST\020\326\236\001B\r\n\013com.bas" +
      "e.pb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
