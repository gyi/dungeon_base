// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MsgDefineFight.proto

package com.base.pb;

public final class MsgDefineFight {
  private MsgDefineFight() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code ProtoNetWorkMessage.EffectType}
   *
   * <pre>
   *技能效果类型
   * </pre>
   */
  public enum EffectType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>PHYSICAL_DAMAGE = 1;</code>
     *
     * <pre>
     *物理伤害
     * </pre>
     */
    PHYSICAL_DAMAGE(0, 1),
    /**
     * <code>MAGIC_DAMAGE = 2;</code>
     *
     * <pre>
     *魔法伤害
     * </pre>
     */
    MAGIC_DAMAGE(1, 2),
    /**
     * <code>BEAT_FLY = 3;</code>
     *
     * <pre>
     *击飞
     * </pre>
     */
    BEAT_FLY(2, 3),
    /**
     * <code>BEAT_BACK = 4;</code>
     *
     * <pre>
     *击退
     * </pre>
     */
    BEAT_BACK(3, 4),
    /**
     * <code>CRICK = 5;</code>
     *
     * <pre>
     *硬直
     * </pre>
     */
    CRICK(4, 5),
    /**
     * <code>FLIGHT = 6;</code>
     *
     * <pre>
     *浮空
     * </pre>
     */
    FLIGHT(5, 6),
    /**
     * <code>FALL = 7;</code>
     *
     * <pre>
     *倒地
     * </pre>
     */
    FALL(6, 7),
    /**
     * <code>CRASH = 8;</code>
     *
     * <pre>
     *冲刺
     * </pre>
     */
    CRASH(7, 8),
    /**
     * <code>ET_DIZZY = 9;</code>
     *
     * <pre>
     *晕眩
     * </pre>
     */
    ET_DIZZY(8, 9),
    /**
     * <code>BULLET = 10;</code>
     *
     * <pre>
     *子弹
     * </pre>
     */
    BULLET(9, 10),
    ;

    /**
     * <code>PHYSICAL_DAMAGE = 1;</code>
     *
     * <pre>
     *物理伤害
     * </pre>
     */
    public static final int PHYSICAL_DAMAGE_VALUE = 1;
    /**
     * <code>MAGIC_DAMAGE = 2;</code>
     *
     * <pre>
     *魔法伤害
     * </pre>
     */
    public static final int MAGIC_DAMAGE_VALUE = 2;
    /**
     * <code>BEAT_FLY = 3;</code>
     *
     * <pre>
     *击飞
     * </pre>
     */
    public static final int BEAT_FLY_VALUE = 3;
    /**
     * <code>BEAT_BACK = 4;</code>
     *
     * <pre>
     *击退
     * </pre>
     */
    public static final int BEAT_BACK_VALUE = 4;
    /**
     * <code>CRICK = 5;</code>
     *
     * <pre>
     *硬直
     * </pre>
     */
    public static final int CRICK_VALUE = 5;
    /**
     * <code>FLIGHT = 6;</code>
     *
     * <pre>
     *浮空
     * </pre>
     */
    public static final int FLIGHT_VALUE = 6;
    /**
     * <code>FALL = 7;</code>
     *
     * <pre>
     *倒地
     * </pre>
     */
    public static final int FALL_VALUE = 7;
    /**
     * <code>CRASH = 8;</code>
     *
     * <pre>
     *冲刺
     * </pre>
     */
    public static final int CRASH_VALUE = 8;
    /**
     * <code>ET_DIZZY = 9;</code>
     *
     * <pre>
     *晕眩
     * </pre>
     */
    public static final int ET_DIZZY_VALUE = 9;
    /**
     * <code>BULLET = 10;</code>
     *
     * <pre>
     *子弹
     * </pre>
     */
    public static final int BULLET_VALUE = 10;


    public final int getNumber() { return value; }

    public static EffectType valueOf(int value) {
      switch (value) {
        case 1: return PHYSICAL_DAMAGE;
        case 2: return MAGIC_DAMAGE;
        case 3: return BEAT_FLY;
        case 4: return BEAT_BACK;
        case 5: return CRICK;
        case 6: return FLIGHT;
        case 7: return FALL;
        case 8: return CRASH;
        case 9: return ET_DIZZY;
        case 10: return BULLET;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<EffectType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<EffectType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<EffectType>() {
            public EffectType findValueByNumber(int number) {
              return EffectType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(0);
    }

    private static final EffectType[] VALUES = values();

    public static EffectType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private EffectType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.EffectType)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.SkillTriggerType}
   *
   * <pre>
   *技能触发条件类型
   * </pre>
   */
  public enum SkillTriggerType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ST_NONE = 1001;</code>
     *
     * <pre>
     *无条件
     * </pre>
     */
    ST_NONE(0, 1001),
    /**
     * <code>ST_HP_MORE_PCT = 1002;</code>
     *
     * <pre>
     *生命上限百分比A
     * </pre>
     */
    ST_HP_MORE_PCT(1, 1002),
    /**
     * <code>ST_HP_LESS_PCT = 1003;</code>
     *
     * <pre>
     *生命上限百分比B
     * </pre>
     */
    ST_HP_LESS_PCT(2, 1003),
    /**
     * <code>ST_MP_MORE_PCT = 1004;</code>
     *
     * <pre>
     *魔法上限百分比A
     * </pre>
     */
    ST_MP_MORE_PCT(3, 1004),
    /**
     * <code>ST_MP_LESS_PCT = 1005;</code>
     *
     * <pre>
     *魔法上限百分比B
     * </pre>
     */
    ST_MP_LESS_PCT(4, 1005),
    /**
     * <code>ST_FURY_MORE_PCT = 1006;</code>
     *
     * <pre>
     *怒气上限百分比A
     * </pre>
     */
    ST_FURY_MORE_PCT(5, 1006),
    /**
     * <code>ST_FURY_LESS_PCT = 1007;</code>
     *
     * <pre>
     *怒气上限百分比B
     * </pre>
     */
    ST_FURY_LESS_PCT(6, 1007),
    /**
     * <code>ST_HIT = 1008;</code>
     *
     * <pre>
     *命中时
     * </pre>
     */
    ST_HIT(7, 1008),
    /**
     * <code>ST_ATT_DAMAGE = 1009;</code>
     *
     * <pre>
     *造成伤害时
     * </pre>
     */
    ST_ATT_DAMAGE(8, 1009),
    /**
     * <code>ST_CRIT = 10010;</code>
     *
     * <pre>
     *暴击时
     * </pre>
     */
    ST_CRIT(9, 10010),
    /**
     * <code>ST_DEF = 1011;</code>
     *
     * <pre>
     *抵抗/格挡时
     * </pre>
     */
    ST_DEF(10, 1011),
    /**
     * <code>ST_BE_DAMAGE = 1012;</code>
     *
     * <pre>
     *受到伤害时
     * </pre>
     */
    ST_BE_DAMAGE(11, 1012),
    /**
     * <code>ST_STATUS_CAHNGE = 1013;</code>
     *
     * <pre>
     *改变到指定状态时
     * </pre>
     */
    ST_STATUS_CAHNGE(12, 1013),
    /**
     * <code>ST_STATUS_REMOVE = 1014;</code>
     *
     * <pre>
     *移除指定状态时
     * </pre>
     */
    ST_STATUS_REMOVE(13, 1014),
    ;

    /**
     * <code>ST_NONE = 1001;</code>
     *
     * <pre>
     *无条件
     * </pre>
     */
    public static final int ST_NONE_VALUE = 1001;
    /**
     * <code>ST_HP_MORE_PCT = 1002;</code>
     *
     * <pre>
     *生命上限百分比A
     * </pre>
     */
    public static final int ST_HP_MORE_PCT_VALUE = 1002;
    /**
     * <code>ST_HP_LESS_PCT = 1003;</code>
     *
     * <pre>
     *生命上限百分比B
     * </pre>
     */
    public static final int ST_HP_LESS_PCT_VALUE = 1003;
    /**
     * <code>ST_MP_MORE_PCT = 1004;</code>
     *
     * <pre>
     *魔法上限百分比A
     * </pre>
     */
    public static final int ST_MP_MORE_PCT_VALUE = 1004;
    /**
     * <code>ST_MP_LESS_PCT = 1005;</code>
     *
     * <pre>
     *魔法上限百分比B
     * </pre>
     */
    public static final int ST_MP_LESS_PCT_VALUE = 1005;
    /**
     * <code>ST_FURY_MORE_PCT = 1006;</code>
     *
     * <pre>
     *怒气上限百分比A
     * </pre>
     */
    public static final int ST_FURY_MORE_PCT_VALUE = 1006;
    /**
     * <code>ST_FURY_LESS_PCT = 1007;</code>
     *
     * <pre>
     *怒气上限百分比B
     * </pre>
     */
    public static final int ST_FURY_LESS_PCT_VALUE = 1007;
    /**
     * <code>ST_HIT = 1008;</code>
     *
     * <pre>
     *命中时
     * </pre>
     */
    public static final int ST_HIT_VALUE = 1008;
    /**
     * <code>ST_ATT_DAMAGE = 1009;</code>
     *
     * <pre>
     *造成伤害时
     * </pre>
     */
    public static final int ST_ATT_DAMAGE_VALUE = 1009;
    /**
     * <code>ST_CRIT = 10010;</code>
     *
     * <pre>
     *暴击时
     * </pre>
     */
    public static final int ST_CRIT_VALUE = 10010;
    /**
     * <code>ST_DEF = 1011;</code>
     *
     * <pre>
     *抵抗/格挡时
     * </pre>
     */
    public static final int ST_DEF_VALUE = 1011;
    /**
     * <code>ST_BE_DAMAGE = 1012;</code>
     *
     * <pre>
     *受到伤害时
     * </pre>
     */
    public static final int ST_BE_DAMAGE_VALUE = 1012;
    /**
     * <code>ST_STATUS_CAHNGE = 1013;</code>
     *
     * <pre>
     *改变到指定状态时
     * </pre>
     */
    public static final int ST_STATUS_CAHNGE_VALUE = 1013;
    /**
     * <code>ST_STATUS_REMOVE = 1014;</code>
     *
     * <pre>
     *移除指定状态时
     * </pre>
     */
    public static final int ST_STATUS_REMOVE_VALUE = 1014;


    public final int getNumber() { return value; }

    public static SkillTriggerType valueOf(int value) {
      switch (value) {
        case 1001: return ST_NONE;
        case 1002: return ST_HP_MORE_PCT;
        case 1003: return ST_HP_LESS_PCT;
        case 1004: return ST_MP_MORE_PCT;
        case 1005: return ST_MP_LESS_PCT;
        case 1006: return ST_FURY_MORE_PCT;
        case 1007: return ST_FURY_LESS_PCT;
        case 1008: return ST_HIT;
        case 1009: return ST_ATT_DAMAGE;
        case 10010: return ST_CRIT;
        case 1011: return ST_DEF;
        case 1012: return ST_BE_DAMAGE;
        case 1013: return ST_STATUS_CAHNGE;
        case 1014: return ST_STATUS_REMOVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillTriggerType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillTriggerType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillTriggerType>() {
            public SkillTriggerType findValueByNumber(int number) {
              return SkillTriggerType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(1);
    }

    private static final SkillTriggerType[] VALUES = values();

    public static SkillTriggerType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillTriggerType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.SkillTriggerType)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.SKILL_TARGET_TYPE}
   *
   * <pre>
   *目标对象
   * </pre>
   */
  public enum SKILL_TARGET_TYPE
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>ST_SELF = 1001;</code>
     *
     * <pre>
     *自身
     * </pre>
     */
    ST_SELF(0, 1001),
    /**
     * <code>ST_FRIEND = 1002;</code>
     *
     * <pre>
     *友方
     * </pre>
     */
    ST_FRIEND(1, 1002),
    /**
     * <code>ST_NEUTRALITY = 1003;</code>
     *
     * <pre>
     *中立
     * </pre>
     */
    ST_NEUTRALITY(2, 1003),
    /**
     * <code>ST_ENEMY = 1004;</code>
     *
     * <pre>
     *敌方指定
     * </pre>
     */
    ST_ENEMY(3, 1004),
    /**
     * <code>ST_APPOINT_CAMP = 1005;</code>
     *
     * <pre>
     *指定阵营
     * </pre>
     */
    ST_APPOINT_CAMP(4, 1005),
    /**
     * <code>ST_APPOINT_TYPE = 1006;</code>
     *
     * <pre>
     *指定怪物类型
     * </pre>
     */
    ST_APPOINT_TYPE(5, 1006),
    /**
     * <code>ST_DAMAGE_FROM = 1007;</code>
     *
     * <pre>
     *伤害来源对象
     * </pre>
     */
    ST_DAMAGE_FROM(6, 1007),
    /**
     * <code>ST_CURR = 1008;</code>
     *
     * <pre>
     *当前对象
     * </pre>
     */
    ST_CURR(7, 1008),
    /**
     * <code>ST_ENEMY_AREA = 1009;</code>
     *
     * <pre>
     *敌方范围
     * </pre>
     */
    ST_ENEMY_AREA(8, 1009),
    ;

    /**
     * <code>ST_SELF = 1001;</code>
     *
     * <pre>
     *自身
     * </pre>
     */
    public static final int ST_SELF_VALUE = 1001;
    /**
     * <code>ST_FRIEND = 1002;</code>
     *
     * <pre>
     *友方
     * </pre>
     */
    public static final int ST_FRIEND_VALUE = 1002;
    /**
     * <code>ST_NEUTRALITY = 1003;</code>
     *
     * <pre>
     *中立
     * </pre>
     */
    public static final int ST_NEUTRALITY_VALUE = 1003;
    /**
     * <code>ST_ENEMY = 1004;</code>
     *
     * <pre>
     *敌方指定
     * </pre>
     */
    public static final int ST_ENEMY_VALUE = 1004;
    /**
     * <code>ST_APPOINT_CAMP = 1005;</code>
     *
     * <pre>
     *指定阵营
     * </pre>
     */
    public static final int ST_APPOINT_CAMP_VALUE = 1005;
    /**
     * <code>ST_APPOINT_TYPE = 1006;</code>
     *
     * <pre>
     *指定怪物类型
     * </pre>
     */
    public static final int ST_APPOINT_TYPE_VALUE = 1006;
    /**
     * <code>ST_DAMAGE_FROM = 1007;</code>
     *
     * <pre>
     *伤害来源对象
     * </pre>
     */
    public static final int ST_DAMAGE_FROM_VALUE = 1007;
    /**
     * <code>ST_CURR = 1008;</code>
     *
     * <pre>
     *当前对象
     * </pre>
     */
    public static final int ST_CURR_VALUE = 1008;
    /**
     * <code>ST_ENEMY_AREA = 1009;</code>
     *
     * <pre>
     *敌方范围
     * </pre>
     */
    public static final int ST_ENEMY_AREA_VALUE = 1009;


    public final int getNumber() { return value; }

    public static SKILL_TARGET_TYPE valueOf(int value) {
      switch (value) {
        case 1001: return ST_SELF;
        case 1002: return ST_FRIEND;
        case 1003: return ST_NEUTRALITY;
        case 1004: return ST_ENEMY;
        case 1005: return ST_APPOINT_CAMP;
        case 1006: return ST_APPOINT_TYPE;
        case 1007: return ST_DAMAGE_FROM;
        case 1008: return ST_CURR;
        case 1009: return ST_ENEMY_AREA;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SKILL_TARGET_TYPE>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SKILL_TARGET_TYPE>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SKILL_TARGET_TYPE>() {
            public SKILL_TARGET_TYPE findValueByNumber(int number) {
              return SKILL_TARGET_TYPE.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(2);
    }

    private static final SKILL_TARGET_TYPE[] VALUES = values();

    public static SKILL_TARGET_TYPE valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SKILL_TARGET_TYPE(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.SKILL_TARGET_TYPE)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.BuffType}
   *
   * <pre>
   *Buff类型
   * </pre>
   */
  public enum BuffType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>HP_ADD = 1001;</code>
     *
     * <pre>
     *加血
     * </pre>
     */
    HP_ADD(0, 1001),
    /**
     * <code>HP_LOSS = 1002;</code>
     *
     * <pre>
     *流血
     * </pre>
     */
    HP_LOSS(1, 1002),
    /**
     * <code>SPEED_ADD = 1003;</code>
     *
     * <pre>
     *加移动速度
     * </pre>
     */
    SPEED_ADD(2, 1003),
    /**
     * <code>SPEED_LOSS = 1004;</code>
     *
     * <pre>
     *减移动速度
     * </pre>
     */
    SPEED_LOSS(3, 1004),
    /**
     * <code>PHYSICAL_ATTACK_ADD = 1005;</code>
     *
     * <pre>
     *加物理攻击
     * </pre>
     */
    PHYSICAL_ATTACK_ADD(4, 1005),
    /**
     * <code>PHYSICAL_ATTACK_LOSS = 1006;</code>
     *
     * <pre>
     *减物理攻击
     * </pre>
     */
    PHYSICAL_ATTACK_LOSS(5, 1006),
    /**
     * <code>MAGIC_ATTACK_ADD = 1007;</code>
     *
     * <pre>
     *加魔法攻击
     * </pre>
     */
    MAGIC_ATTACK_ADD(6, 1007),
    /**
     * <code>MAGIC_ATTACK_LOSS = 1008;</code>
     *
     * <pre>
     *减魔法攻击
     * </pre>
     */
    MAGIC_ATTACK_LOSS(7, 1008),
    /**
     * <code>PHYSICAL_DEF_ADD = 1009;</code>
     *
     * <pre>
     *加物理防御
     * </pre>
     */
    PHYSICAL_DEF_ADD(8, 1009),
    /**
     * <code>PHYSICAL_DEF_LOSS = 1010;</code>
     *
     * <pre>
     *减物理防御
     * </pre>
     */
    PHYSICAL_DEF_LOSS(9, 1010),
    /**
     * <code>MAGIC_DEF_ADD = 1011;</code>
     *
     * <pre>
     *加魔法防御
     * </pre>
     */
    MAGIC_DEF_ADD(10, 1011),
    /**
     * <code>MAGIC_DEF_LOSS = 1012;</code>
     *
     * <pre>
     *减魔法防御
     * </pre>
     */
    MAGIC_DEF_LOSS(11, 1012),
    /**
     * <code>CRIT_ADD = 1013;</code>
     *
     * <pre>
     *加暴击
     * </pre>
     */
    CRIT_ADD(12, 1013),
    /**
     * <code>CRIT_LOSS = 1014;</code>
     *
     * <pre>
     *减暴击
     * </pre>
     */
    CRIT_LOSS(13, 1014),
    /**
     * <code>PHYSICAL_MITIGATION = 1015;</code>
     *
     * <pre>
     *减伤
     * </pre>
     */
    PHYSICAL_MITIGATION(14, 1015),
    /**
     * <code>MAGIC_MITIGATION = 1016;</code>
     */
    MAGIC_MITIGATION(15, 1016),
    /**
     * <code>DIZZY = 1017;</code>
     *
     * <pre>
     *晕眩
     * </pre>
     */
    DIZZY(16, 1017),
    /**
     * <code>SUPER_ARMOR = 1018;</code>
     *
     * <pre>
     *无敌(霸体)
     * </pre>
     */
    SUPER_ARMOR(17, 1018),
    ;

    /**
     * <code>HP_ADD = 1001;</code>
     *
     * <pre>
     *加血
     * </pre>
     */
    public static final int HP_ADD_VALUE = 1001;
    /**
     * <code>HP_LOSS = 1002;</code>
     *
     * <pre>
     *流血
     * </pre>
     */
    public static final int HP_LOSS_VALUE = 1002;
    /**
     * <code>SPEED_ADD = 1003;</code>
     *
     * <pre>
     *加移动速度
     * </pre>
     */
    public static final int SPEED_ADD_VALUE = 1003;
    /**
     * <code>SPEED_LOSS = 1004;</code>
     *
     * <pre>
     *减移动速度
     * </pre>
     */
    public static final int SPEED_LOSS_VALUE = 1004;
    /**
     * <code>PHYSICAL_ATTACK_ADD = 1005;</code>
     *
     * <pre>
     *加物理攻击
     * </pre>
     */
    public static final int PHYSICAL_ATTACK_ADD_VALUE = 1005;
    /**
     * <code>PHYSICAL_ATTACK_LOSS = 1006;</code>
     *
     * <pre>
     *减物理攻击
     * </pre>
     */
    public static final int PHYSICAL_ATTACK_LOSS_VALUE = 1006;
    /**
     * <code>MAGIC_ATTACK_ADD = 1007;</code>
     *
     * <pre>
     *加魔法攻击
     * </pre>
     */
    public static final int MAGIC_ATTACK_ADD_VALUE = 1007;
    /**
     * <code>MAGIC_ATTACK_LOSS = 1008;</code>
     *
     * <pre>
     *减魔法攻击
     * </pre>
     */
    public static final int MAGIC_ATTACK_LOSS_VALUE = 1008;
    /**
     * <code>PHYSICAL_DEF_ADD = 1009;</code>
     *
     * <pre>
     *加物理防御
     * </pre>
     */
    public static final int PHYSICAL_DEF_ADD_VALUE = 1009;
    /**
     * <code>PHYSICAL_DEF_LOSS = 1010;</code>
     *
     * <pre>
     *减物理防御
     * </pre>
     */
    public static final int PHYSICAL_DEF_LOSS_VALUE = 1010;
    /**
     * <code>MAGIC_DEF_ADD = 1011;</code>
     *
     * <pre>
     *加魔法防御
     * </pre>
     */
    public static final int MAGIC_DEF_ADD_VALUE = 1011;
    /**
     * <code>MAGIC_DEF_LOSS = 1012;</code>
     *
     * <pre>
     *减魔法防御
     * </pre>
     */
    public static final int MAGIC_DEF_LOSS_VALUE = 1012;
    /**
     * <code>CRIT_ADD = 1013;</code>
     *
     * <pre>
     *加暴击
     * </pre>
     */
    public static final int CRIT_ADD_VALUE = 1013;
    /**
     * <code>CRIT_LOSS = 1014;</code>
     *
     * <pre>
     *减暴击
     * </pre>
     */
    public static final int CRIT_LOSS_VALUE = 1014;
    /**
     * <code>PHYSICAL_MITIGATION = 1015;</code>
     *
     * <pre>
     *减伤
     * </pre>
     */
    public static final int PHYSICAL_MITIGATION_VALUE = 1015;
    /**
     * <code>MAGIC_MITIGATION = 1016;</code>
     */
    public static final int MAGIC_MITIGATION_VALUE = 1016;
    /**
     * <code>DIZZY = 1017;</code>
     *
     * <pre>
     *晕眩
     * </pre>
     */
    public static final int DIZZY_VALUE = 1017;
    /**
     * <code>SUPER_ARMOR = 1018;</code>
     *
     * <pre>
     *无敌(霸体)
     * </pre>
     */
    public static final int SUPER_ARMOR_VALUE = 1018;


    public final int getNumber() { return value; }

    public static BuffType valueOf(int value) {
      switch (value) {
        case 1001: return HP_ADD;
        case 1002: return HP_LOSS;
        case 1003: return SPEED_ADD;
        case 1004: return SPEED_LOSS;
        case 1005: return PHYSICAL_ATTACK_ADD;
        case 1006: return PHYSICAL_ATTACK_LOSS;
        case 1007: return MAGIC_ATTACK_ADD;
        case 1008: return MAGIC_ATTACK_LOSS;
        case 1009: return PHYSICAL_DEF_ADD;
        case 1010: return PHYSICAL_DEF_LOSS;
        case 1011: return MAGIC_DEF_ADD;
        case 1012: return MAGIC_DEF_LOSS;
        case 1013: return CRIT_ADD;
        case 1014: return CRIT_LOSS;
        case 1015: return PHYSICAL_MITIGATION;
        case 1016: return MAGIC_MITIGATION;
        case 1017: return DIZZY;
        case 1018: return SUPER_ARMOR;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BuffType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BuffType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BuffType>() {
            public BuffType findValueByNumber(int number) {
              return BuffType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(3);
    }

    private static final BuffType[] VALUES = values();

    public static BuffType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BuffType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.BuffType)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.BuffDamageType}
   *
   * <pre>
   *buff伤害类型
   * </pre>
   */
  public enum BuffDamageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>BUFF_PHYSICAL_DAMAGE = 1;</code>
     *
     * <pre>
     *物理伤害
     * </pre>
     */
    BUFF_PHYSICAL_DAMAGE(0, 1),
    /**
     * <code>BUFF_MAGIC_DAMAGE = 2;</code>
     *
     * <pre>
     *魔法伤害
     * </pre>
     */
    BUFF_MAGIC_DAMAGE(1, 2),
    ;

    /**
     * <code>BUFF_PHYSICAL_DAMAGE = 1;</code>
     *
     * <pre>
     *物理伤害
     * </pre>
     */
    public static final int BUFF_PHYSICAL_DAMAGE_VALUE = 1;
    /**
     * <code>BUFF_MAGIC_DAMAGE = 2;</code>
     *
     * <pre>
     *魔法伤害
     * </pre>
     */
    public static final int BUFF_MAGIC_DAMAGE_VALUE = 2;


    public final int getNumber() { return value; }

    public static BuffDamageType valueOf(int value) {
      switch (value) {
        case 1: return BUFF_PHYSICAL_DAMAGE;
        case 2: return BUFF_MAGIC_DAMAGE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<BuffDamageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<BuffDamageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<BuffDamageType>() {
            public BuffDamageType findValueByNumber(int number) {
              return BuffDamageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(4);
    }

    private static final BuffDamageType[] VALUES = values();

    public static BuffDamageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private BuffDamageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.BuffDamageType)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.DamageType}
   *
   * <pre>
   *伤害状态
   * </pre>
   */
  public enum DamageType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DAMAGE_CRIT = 1;</code>
     *
     * <pre>
     *暴击
     * </pre>
     */
    DAMAGE_CRIT(0, 1),
    /**
     * <code>DAMAGE_CRIT_DEF = 2;</code>
     *
     * <pre>
     *抵抗
     * </pre>
     */
    DAMAGE_CRIT_DEF(1, 2),
    /**
     * <code>DAMAGE_NORMAL = 3;</code>
     *
     * <pre>
     *普通伤害
     * </pre>
     */
    DAMAGE_NORMAL(2, 3),
    ;

    /**
     * <code>DAMAGE_CRIT = 1;</code>
     *
     * <pre>
     *暴击
     * </pre>
     */
    public static final int DAMAGE_CRIT_VALUE = 1;
    /**
     * <code>DAMAGE_CRIT_DEF = 2;</code>
     *
     * <pre>
     *抵抗
     * </pre>
     */
    public static final int DAMAGE_CRIT_DEF_VALUE = 2;
    /**
     * <code>DAMAGE_NORMAL = 3;</code>
     *
     * <pre>
     *普通伤害
     * </pre>
     */
    public static final int DAMAGE_NORMAL_VALUE = 3;


    public final int getNumber() { return value; }

    public static DamageType valueOf(int value) {
      switch (value) {
        case 1: return DAMAGE_CRIT;
        case 2: return DAMAGE_CRIT_DEF;
        case 3: return DAMAGE_NORMAL;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DamageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<DamageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DamageType>() {
            public DamageType findValueByNumber(int number) {
              return DamageType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(5);
    }

    private static final DamageType[] VALUES = values();

    public static DamageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private DamageType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.DamageType)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.SkillCostType}
   *
   * <pre>
   *技能消耗类型
   * </pre>
   */
  public enum SkillCostType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>S_COST_HP = 1;</code>
     *
     * <pre>
     *消耗HP
     * </pre>
     */
    S_COST_HP(0, 1),
    /**
     * <code>S_COST_FURY = 2;</code>
     *
     * <pre>
     *消耗怒气
     * </pre>
     */
    S_COST_FURY(1, 2),
    /**
     * <code>S_COST_MP = 3;</code>
     *
     * <pre>
     *消耗MP
     * </pre>
     */
    S_COST_MP(2, 3),
    /**
     * <code>S_COST_ITEM = 4;</code>
     *
     * <pre>
     *消耗道具
     * </pre>
     */
    S_COST_ITEM(3, 4),
    ;

    /**
     * <code>S_COST_HP = 1;</code>
     *
     * <pre>
     *消耗HP
     * </pre>
     */
    public static final int S_COST_HP_VALUE = 1;
    /**
     * <code>S_COST_FURY = 2;</code>
     *
     * <pre>
     *消耗怒气
     * </pre>
     */
    public static final int S_COST_FURY_VALUE = 2;
    /**
     * <code>S_COST_MP = 3;</code>
     *
     * <pre>
     *消耗MP
     * </pre>
     */
    public static final int S_COST_MP_VALUE = 3;
    /**
     * <code>S_COST_ITEM = 4;</code>
     *
     * <pre>
     *消耗道具
     * </pre>
     */
    public static final int S_COST_ITEM_VALUE = 4;


    public final int getNumber() { return value; }

    public static SkillCostType valueOf(int value) {
      switch (value) {
        case 1: return S_COST_HP;
        case 2: return S_COST_FURY;
        case 3: return S_COST_MP;
        case 4: return S_COST_ITEM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillCostType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillCostType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillCostType>() {
            public SkillCostType findValueByNumber(int number) {
              return SkillCostType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(6);
    }

    private static final SkillCostType[] VALUES = values();

    public static SkillCostType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillCostType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.SkillCostType)
  }

  /**
   * Protobuf enum {@code ProtoNetWorkMessage.SkillCostPattern}
   *
   * <pre>
   *技能消耗模式
   * </pre>
   */
  public enum SkillCostPattern
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>S_COST_CURR = 1;</code>
     *
     * <pre>
     *消耗当前值
     * </pre>
     */
    S_COST_CURR(0, 1),
    /**
     * <code>S_COST_MAX = 2;</code>
     *
     * <pre>
     *消耗最大值
     * </pre>
     */
    S_COST_MAX(1, 2),
    /**
     * <code>S_COST_FIXED = 3;</code>
     *
     * <pre>
     *消耗固定值
     * </pre>
     */
    S_COST_FIXED(2, 3),
    /**
     * <code>S_COST_NONO = 4;</code>
     *
     * <pre>
     *无类型(道具消耗)
     * </pre>
     */
    S_COST_NONO(3, 4),
    ;

    /**
     * <code>S_COST_CURR = 1;</code>
     *
     * <pre>
     *消耗当前值
     * </pre>
     */
    public static final int S_COST_CURR_VALUE = 1;
    /**
     * <code>S_COST_MAX = 2;</code>
     *
     * <pre>
     *消耗最大值
     * </pre>
     */
    public static final int S_COST_MAX_VALUE = 2;
    /**
     * <code>S_COST_FIXED = 3;</code>
     *
     * <pre>
     *消耗固定值
     * </pre>
     */
    public static final int S_COST_FIXED_VALUE = 3;
    /**
     * <code>S_COST_NONO = 4;</code>
     *
     * <pre>
     *无类型(道具消耗)
     * </pre>
     */
    public static final int S_COST_NONO_VALUE = 4;


    public final int getNumber() { return value; }

    public static SkillCostPattern valueOf(int value) {
      switch (value) {
        case 1: return S_COST_CURR;
        case 2: return S_COST_MAX;
        case 3: return S_COST_FIXED;
        case 4: return S_COST_NONO;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SkillCostPattern>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<SkillCostPattern>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SkillCostPattern>() {
            public SkillCostPattern findValueByNumber(int number) {
              return SkillCostPattern.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.base.pb.MsgDefineFight.getDescriptor().getEnumTypes().get(7);
    }

    private static final SkillCostPattern[] VALUES = values();

    public static SkillCostPattern valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private SkillCostPattern(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:ProtoNetWorkMessage.SkillCostPattern)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024MsgDefineFight.proto\022\023ProtoNetWorkMess" +
      "age*\226\001\n\nEffectType\022\023\n\017PHYSICAL_DAMAGE\020\001\022" +
      "\020\n\014MAGIC_DAMAGE\020\002\022\014\n\010BEAT_FLY\020\003\022\r\n\tBEAT_" +
      "BACK\020\004\022\t\n\005CRICK\020\005\022\n\n\006FLIGHT\020\006\022\010\n\004FALL\020\007\022" +
      "\t\n\005CRASH\020\010\022\014\n\010ET_DIZZY\020\t\022\n\n\006BULLET\020\n*\237\002\n" +
      "\020SkillTriggerType\022\014\n\007ST_NONE\020\351\007\022\023\n\016ST_HP" +
      "_MORE_PCT\020\352\007\022\023\n\016ST_HP_LESS_PCT\020\353\007\022\023\n\016ST_" +
      "MP_MORE_PCT\020\354\007\022\023\n\016ST_MP_LESS_PCT\020\355\007\022\025\n\020S" +
      "T_FURY_MORE_PCT\020\356\007\022\025\n\020ST_FURY_LESS_PCT\020\357" +
      "\007\022\013\n\006ST_HIT\020\360\007\022\022\n\rST_ATT_DAMAGE\020\361\007\022\014\n\007ST",
      "_CRIT\020\232N\022\013\n\006ST_DEF\020\363\007\022\021\n\014ST_BE_DAMAGE\020\364\007" +
      "\022\025\n\020ST_STATUS_CAHNGE\020\365\007\022\025\n\020ST_STATUS_REM" +
      "OVE\020\366\007*\267\001\n\021SKILL_TARGET_TYPE\022\014\n\007ST_SELF\020" +
      "\351\007\022\016\n\tST_FRIEND\020\352\007\022\022\n\rST_NEUTRALITY\020\353\007\022\r" +
      "\n\010ST_ENEMY\020\354\007\022\024\n\017ST_APPOINT_CAMP\020\355\007\022\024\n\017S" +
      "T_APPOINT_TYPE\020\356\007\022\023\n\016ST_DAMAGE_FROM\020\357\007\022\014" +
      "\n\007ST_CURR\020\360\007\022\022\n\rST_ENEMY_AREA\020\361\007*\360\002\n\010Buf" +
      "fType\022\013\n\006HP_ADD\020\351\007\022\014\n\007HP_LOSS\020\352\007\022\016\n\tSPEE" +
      "D_ADD\020\353\007\022\017\n\nSPEED_LOSS\020\354\007\022\030\n\023PHYSICAL_AT" +
      "TACK_ADD\020\355\007\022\031\n\024PHYSICAL_ATTACK_LOSS\020\356\007\022\025",
      "\n\020MAGIC_ATTACK_ADD\020\357\007\022\026\n\021MAGIC_ATTACK_LO" +
      "SS\020\360\007\022\025\n\020PHYSICAL_DEF_ADD\020\361\007\022\026\n\021PHYSICAL" +
      "_DEF_LOSS\020\362\007\022\022\n\rMAGIC_DEF_ADD\020\363\007\022\023\n\016MAGI" +
      "C_DEF_LOSS\020\364\007\022\r\n\010CRIT_ADD\020\365\007\022\016\n\tCRIT_LOS" +
      "S\020\366\007\022\030\n\023PHYSICAL_MITIGATION\020\367\007\022\025\n\020MAGIC_" +
      "MITIGATION\020\370\007\022\n\n\005DIZZY\020\371\007\022\020\n\013SUPER_ARMOR" +
      "\020\372\007*A\n\016BuffDamageType\022\030\n\024BUFF_PHYSICAL_D" +
      "AMAGE\020\001\022\025\n\021BUFF_MAGIC_DAMAGE\020\002*E\n\nDamage" +
      "Type\022\017\n\013DAMAGE_CRIT\020\001\022\023\n\017DAMAGE_CRIT_DEF" +
      "\020\002\022\021\n\rDAMAGE_NORMAL\020\003*O\n\rSkillCostType\022\r",
      "\n\tS_COST_HP\020\001\022\017\n\013S_COST_FURY\020\002\022\r\n\tS_COST" +
      "_MP\020\003\022\017\n\013S_COST_ITEM\020\004*V\n\020SkillCostPatte" +
      "rn\022\017\n\013S_COST_CURR\020\001\022\016\n\nS_COST_MAX\020\002\022\020\n\014S" +
      "_COST_FIXED\020\003\022\017\n\013S_COST_NONO\020\004B\r\n\013com.ba" +
      "se.pb"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
